{
  "processed_files": [
    {
      "filepath": "app/services/ai_service.py",
      "coverage": 4.839,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n__________________ ERROR collecting tests/test_ai_service.py ___________________\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/runner.py:341: in from_call\n    result: Optional[TResult] = func()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/runner.py:372: in <lambda>\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py:640: in _patched_collect\n    module = collector.obj\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/python.py:310: in obj\n    self._obj = obj = self._getobj()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/python.py:528: in _getobj\n    return self._importtestmodule()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/python.py:617: in _importtestmodule\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/pathlib.py:567: in import_path\n    importlib.import_module(module_name)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_ai_service.py:3: in <module>\n    from app.services.ai_service import AIService\napp/services/ai_service.py:3: in <module>\n    from app.utils.config import get_settings\napp/utils/config.py:30: in <module>\n    settings = get_settings()\napp/utils/config.py:28: in get_settings\n    return Settings()\napp/utils/config.py:21: in __init__\n    super().__init__(**kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic_settings/main.py:176: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nE   GOOGLE_API_KEY\nE     Field required [type=missing, input_value={}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing\n=============================== warnings summary ===============================\n../../../../../opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic/_internal/_config.py:323\n  /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_ai_service.py - pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nGOOGLE_API_KEY\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n========================= 1 warning, 1 error in 0.73s ==========================\n",
        "stderr": "",
        "returncode": 2
      }
    },
    {
      "filepath": "app/services/local_product_service.py",
      "coverage": 11.540000000000001,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": true,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 29 items\n\ntests/test_local_product_service.py::test_local_product_service_init PASSED [  3%]\ntests/test_local_product_service.py::test_local_product_service_init_with_fallback PASSED [  6%]\ntests/test_local_product_service.py::test_search_products PASSED         [ 10%]\ntests/test_local_product_service.py::test_search_products_no_match PASSED [ 13%]\ntests/test_local_product_service.py::test_search_products_empty_keyword PASSED [ 17%]\ntests/test_local_product_service.py::test_get_product_details PASSED     [ 20%]\ntests/test_local_product_service.py::test_get_product_details_not_found PASSED [ 24%]\ntests/test_local_product_service.py::test_get_categories PASSED          [ 27%]\ntests/test_local_product_service.py::test_get_brands PASSED              [ 31%]\ntests/test_local_product_service.py::test_get_products_by_category PASSED [ 34%]\ntests/test_local_product_service.py::test_get_products_by_category_not_found PASSED [ 37%]\ntests/test_local_product_service.py::test_get_products_by_brand PASSED   [ 41%]\ntests/test_local_product_service.py::test_get_products_by_brand_not_found PASSED [ 44%]\ntests/test_local_product_service.py::test_get_top_rated_products PASSED  [ 48%]\ntests/test_local_product_service.py::test_get_best_selling_products PASSED [ 51%]\ntests/test_local_product_service.py::test_get_products PASSED            [ 55%]\ntests/test_local_product_service.py::test_get_products_with_large_limit PASSED [ 58%]\ntests/test_local_product_service.py::test_search_products_with_relevance PASSED [ 62%]\ntests/test_local_product_service.py::test_search_products_case_insensitive PASSED [ 65%]\ntests/test_local_product_service.py::test_search_products_in_description PASSED [ 68%]\ntests/test_local_product_service.py::test_search_products_in_specifications PASSED [ 72%]\ntests/test_local_product_service.py::test_smart_search_products_best_request PASSED [ 75%]\ntests/test_local_product_service.py::test_smart_search_products_best_request_no_category PASSED [ 79%]\ntests/test_local_product_service.py::test_smart_search_products_exact_match PASSED [ 82%]\ntests/test_local_product_service.py::test_smart_search_products_category_fallback PASSED [ 86%]\ntests/test_local_product_service.py::test_smart_search_products_budget_fallback PASSED [ 89%]\ntests/test_local_product_service.py::test_smart_search_products_popular_fallback PASSED [ 93%]\ntests/test_local_product_service.py::test_extract_price_from_keyword PASSED [ 96%]\ntests/test_local_product_service.py::test_search_products_with_price_extraction PASSED [100%]\n\n============================== 29 passed in 0.10s ==============================\n",
        "stderr": "",
        "returncode": 0
      }
    },
    {
      "filepath": "app/services/product_data_service.py",
      "coverage": 20.73,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": true,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 19 items\n\ntests/test_product_data_service.py::TestProductDataService::test_init PASSED [  5%]\ntests/test_product_data_service.py::TestProductDataService::test_search_products_success PASSED [ 10%]\ntests/test_product_data_service.py::TestProductDataService::test_search_products_error PASSED [ 15%]\ntests/test_product_data_service.py::TestProductDataService::test_get_products_with_search PASSED [ 21%]\ntests/test_product_data_service.py::TestProductDataService::test_get_products_with_category PASSED [ 26%]\ntests/test_product_data_service.py::TestProductDataService::test_get_products_default PASSED [ 31%]\ntests/test_product_data_service.py::TestProductDataService::test_get_categories_success PASSED [ 36%]\ntests/test_product_data_service.py::TestProductDataService::test_get_categories_error PASSED [ 42%]\ntests/test_product_data_service.py::TestProductDataService::test_get_top_rated_products PASSED [ 47%]\ntests/test_product_data_service.py::TestProductDataService::test_get_best_selling_products PASSED [ 52%]\ntests/test_product_data_service.py::TestProductDataService::test_get_products_by_category PASSED [ 57%]\ntests/test_product_data_service.py::TestProductDataService::test_get_all_products PASSED [ 63%]\ntests/test_product_data_service.py::TestProductDataService::test_get_product_details PASSED [ 68%]\ntests/test_product_data_service.py::TestProductDataService::test_get_brands PASSED [ 73%]\ntests/test_product_data_service.py::TestProductDataService::test_get_products_by_brand PASSED [ 78%]\ntests/test_product_data_service.py::TestProductDataService::test_smart_search_products PASSED [ 84%]\ntests/test_product_data_service.py::TestProductDataService::test_smart_search_products_no_category PASSED [ 89%]\ntests/test_product_data_service.py::TestProductDataService::test_smart_search_products_budget_only PASSED [ 94%]\ntests/test_product_data_service.py::TestProductDataService::test_smart_search_products_empty_result PASSED [100%]\n\n============================== 19 passed in 0.08s ==============================\n",
        "stderr": "",
        "returncode": 0
      }
    },
    {
      "filepath": "app/utils/config.py",
      "coverage": 86.36,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": true,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 2 items\n\ntests/test_config.py::test_settings_valid PASSED                         [ 50%]\ntests/test_config.py::test_settings_invalid PASSED                       [100%]\n\n=============================== warnings summary ===============================\ntests/test_config.py::test_settings_valid\n  /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n========================= 2 passed, 1 warning in 0.08s =========================\n",
        "stderr": "",
        "returncode": 0
      }
    }
  ],
  "success_count": 3,
  "error_count": 1
}