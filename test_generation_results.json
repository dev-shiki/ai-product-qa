{
  "processed_files": [
    {
      "filepath": "app/services/ai_service.py",
      "coverage": 4.839,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 0 items / 1 error\n\n==================================== ERRORS ====================================\n______________ ERROR collecting tests/test_services/ai_service.py ______________\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/runner.py:341: in from_call\n    result: Optional[TResult] = func()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/runner.py:372: in <lambda>\n    call = CallInfo.from_call(lambda: list(collector.collect()), \"collect\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_asyncio/plugin.py:640: in _patched_collect\n    module = collector.obj\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/python.py:310: in obj\n    self._obj = obj = self._getobj()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/python.py:528: in _getobj\n    return self._importtestmodule()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/python.py:617: in _importtestmodule\n    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/pathlib.py:567: in import_path\n    importlib.import_module(module_name)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/assertion/rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests/test_services/ai_service.py:11: in <module>\n    from app.services.ai_service import AIService\napp/services/ai_service.py:3: in <module>\n    from app.utils.config import get_settings\napp/utils/config.py:30: in <module>\n    settings = get_settings()\napp/utils/config.py:28: in get_settings\n    return Settings()\napp/utils/config.py:21: in __init__\n    super().__init__(**kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic_settings/main.py:176: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nE   GOOGLE_API_KEY\nE     Field required [type=missing, input_value={}, input_type=dict]\nE       For further information visit https://errors.pydantic.dev/2.11/v/missing\n=============================== warnings summary ===============================\n../../../../../opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic/_internal/_config.py:323\n  /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_services/ai_service.py - pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nGOOGLE_API_KEY\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n========================= 1 warning, 1 error in 0.76s ==========================\n",
        "stderr": "",
        "returncode": 2
      }
    },
    {
      "filepath": "app/services/local_product_service.py",
      "coverage": 11.540000000000001,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 92 items\n\ntests/test_services/local_product_service.py::test_init_success PASSED   [  1%]\ntests/test_services/local_product_service.py::test_load_local_products_file_not_found FAILED [  2%]\ntests/test_services/local_product_service.py::test_load_local_products_valid_json_utf8 FAILED [  3%]\ntests/test_services/local_product_service.py::test_load_local_products_valid_json_utf16le_with_bom FAILED [  4%]\ntests/test_services/local_product_service.py::test_load_local_products_valid_json_utf8_sig_succeeds_after_utf8_fails FAILED [  5%]\ntests/test_services/local_product_service.py::test_load_local_products_valid_json_latin1_succeeds_after_others_fail FAILED [  6%]\ntests/test_services/local_product_service.py::test_load_local_products_invalid_json_all_encodings_fail FAILED [  7%]\ntests/test_services/local_product_service.py::test_load_local_products_unicode_decode_error_all_encodings_fail FAILED [  8%]\ntests/test_services/local_product_service.py::test_load_local_products_generic_exception FAILED [  9%]\ntests/test_services/local_product_service.py::test_load_local_products_empty_products_list_in_json FAILED [ 10%]\ntests/test_services/local_product_service.py::test_load_local_products_json_missing_products_key FAILED [ 11%]\ntests/test_services/local_product_service.py::test_load_local_products_json_products_key_not_list FAILED [ 13%]\ntests/test_services/local_product_service.py::test_load_local_products_transformation_minimal_fields PASSED [ 14%]\ntests/test_services/local_product_service.py::test_load_local_products_transformation_with_extra_spec_fields FAILED [ 15%]\ntests/test_services/local_product_service.py::test_load_local_products_transformation_product_not_dict_causes_error FAILED [ 16%]\ntests/test_services/local_product_service.py::test_load_local_products_first_encoding_succeeds_others_not_tried FAILED [ 17%]\ntests/test_services/local_product_service.py::test_get_fallback_products PASSED [ 18%]\ntests/test_services/local_product_service.py::test_search_products_basic_keyword_match PASSED [ 19%]\ntests/test_services/local_product_service.py::test_search_products_case_insensitivity PASSED [ 20%]\ntests/test_services/local_product_service.py::test_search_products_no_match PASSED [ 21%]\ntests/test_services/local_product_service.py::test_search_products_with_limit PASSED [ 22%]\ntests/test_services/local_product_service.py::test_search_products_limit_zero PASSED [ 23%]\ntests/test_services/local_product_service.py::test_search_products_keyword_in_category_brand_specs PASSED [ 25%]\ntests/test_services/local_product_service.py::test_search_products_price_extraction_juta FAILED [ 26%]\ntests/test_services/local_product_service.py::test_search_products_price_extraction_ribu PASSED [ 27%]\ntests/test_services/local_product_service.py::test_search_products_price_extraction_rp PASSED [ 28%]\ntests/test_services/local_product_service.py::test_search_products_price_extraction_k_m PASSED [ 29%]\ntests/test_services/local_product_service.py::test_search_products_price_extraction_budget_keyword FAILED [ 30%]\ntests/test_services/local_product_service.py::test_search_products_price_and_keyword_combined_without_budget_keyword FAILED [ 31%]\ntests/test_services/local_product_service.py::test_search_products_relevance_sorting_exact_match PASSED [ 32%]\ntests/test_services/local_product_service.py::test_search_products_relevance_sorting_budget_preference PASSED [ 33%]\ntests/test_services/local_product_service.py::test_search_products_empty_keyword PASSED [ 34%]\ntests/test_services/local_product_service.py::test_search_products_error_handling FAILED [ 35%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_juta FAILED [ 36%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_ribu PASSED [ 38%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_rp FAILED [ 39%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_k_m FAILED [ 40%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_budget_keywords PASSED [ 41%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_no_match PASSED [ 42%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_multiple_patterns_first_match_wins PASSED [ 43%]\ntests/test_services/local_product_service.py::test_extract_price_from_keyword_error_handling PASSED [ 44%]\ntests/test_services/local_product_service.py::test_get_product_details_found PASSED [ 45%]\ntests/test_services/local_product_service.py::test_get_product_details_not_found PASSED [ 46%]\ntests/test_services/local_product_service.py::test_get_product_details_empty_products_list PASSED [ 47%]\ntests/test_services/local_product_service.py::test_get_product_details_error_handling FAILED [ 48%]\ntests/test_services/local_product_service.py::test_get_categories PASSED [ 50%]\ntests/test_services/local_product_service.py::test_get_categories_empty_products_list PASSED [ 51%]\ntests/test_services/local_product_service.py::test_get_categories_with_missing_category_key PASSED [ 52%]\ntests/test_services/local_product_service.py::test_get_brands FAILED     [ 53%]\ntests/test_services/local_product_service.py::test_get_brands_empty_products_list PASSED [ 54%]\ntests/test_services/local_product_service.py::test_get_brands_with_missing_brand_key PASSED [ 55%]\ntests/test_services/local_product_service.py::test_get_products_by_category_found PASSED [ 56%]\ntests/test_services/local_product_service.py::test_get_products_by_category_case_insensitivity PASSED [ 57%]\ntests/test_services/local_product_service.py::test_get_products_by_category_not_found PASSED [ 58%]\ntests/test_services/local_product_service.py::test_get_products_by_category_empty_products_list PASSED [ 59%]\ntests/test_services/local_product_service.py::test_get_products_by_category_error_handling FAILED [ 60%]\ntests/test_services/local_product_service.py::test_get_products_by_brand_found PASSED [ 61%]\ntests/test_services/local_product_service.py::test_get_products_by_brand_case_insensitivity PASSED [ 63%]\ntests/test_services/local_product_service.py::test_get_products_by_brand_not_found PASSED [ 64%]\ntests/test_services/local_product_service.py::test_get_products_by_brand_empty_products_list PASSED [ 65%]\ntests/test_services/local_product_service.py::test_get_products_by_brand_error_handling FAILED [ 66%]\ntests/test_services/local_product_service.py::test_get_top_rated_products PASSED [ 67%]\ntests/test_services/local_product_service.py::test_get_top_rated_products_limit_greater_than_available PASSED [ 68%]\ntests/test_services/local_product_service.py::test_get_top_rated_products_limit_zero PASSED [ 69%]\ntests/test_services/local_product_service.py::test_get_top_rated_products_empty_products_list PASSED [ 70%]\ntests/test_services/local_product_service.py::test_get_top_rated_products_with_missing_rating_key PASSED [ 71%]\ntests/test_services/local_product_service.py::test_get_top_rated_products_error_handling FAILED [ 72%]\ntests/test_services/local_product_service.py::test_get_best_selling_products PASSED [ 73%]\ntests/test_services/local_product_service.py::test_get_best_selling_products_limit_greater_than_available PASSED [ 75%]\ntests/test_services/local_product_service.py::test_get_best_selling_products_limit_zero PASSED [ 76%]\ntests/test_services/local_product_service.py::test_get_best_selling_products_empty_products_list PASSED [ 77%]\ntests/test_services/local_product_service.py::test_get_best_selling_products_with_missing_sold_key PASSED [ 78%]\ntests/test_services/local_product_service.py::test_get_best_selling_products_error_handling FAILED [ 79%]\ntests/test_services/local_product_service.py::test_get_products PASSED   [ 80%]\ntests/test_services/local_product_service.py::test_get_products_limit_greater_than_available PASSED [ 81%]\ntests/test_services/local_product_service.py::test_get_products_limit_zero PASSED [ 82%]\ntests/test_services/local_product_service.py::test_get_products_empty_products_list PASSED [ 83%]\ntests/test_services/local_product_service.py::test_get_products_error_handling FAILED [ 84%]\ntests/test_services/local_product_service.py::test_smart_search_products_best_request_general PASSED [ 85%]\ntests/test_services/local_product_service.py::test_smart_search_products_best_request_english_keyword PASSED [ 86%]\ntests/test_services/local_product_service.py::test_smart_search_products_best_request_specific_category_found PASSED [ 88%]\ntests/test_services/local_product_service.py::test_smart_search_products_best_request_specific_category_not_found_fallback PASSED [ 89%]\ntests/test_services/local_product_service.py::test_smart_search_products_all_criteria_match FAILED [ 90%]\ntests/test_services/local_product_service.py::test_smart_search_products_no_exact_match_fallback_to_category PASSED [ 91%]\ntests/test_services/local_product_service.py::test_smart_search_products_no_category_match_fallback_to_budget PASSED [ 92%]\ntests/test_services/local_product_service.py::test_smart_search_products_no_match_all_fallbacks_popular FAILED [ 93%]\ntests/test_services/local_product_service.py::test_smart_search_products_empty_keyword_only_category PASSED [ 94%]\ntests/test_services/local_product_service.py::test_smart_search_products_empty_keyword_only_max_price FAILED [ 95%]\ntests/test_services/local_product_service.py::test_smart_search_products_empty_all_filters PASSED [ 96%]\ntests/test_services/local_product_service.py::test_smart_search_products_limit_zero PASSED [ 97%]\ntests/test_services/local_product_service.py::test_smart_search_products_negative_limit FAILED [ 98%]\ntests/test_services/local_product_service.py::test_smart_search_products_no_products_loaded PASSED [100%]\n\n=================================== FAILURES ===================================\n___________________ test_load_local_products_file_not_found ____________________\ntests/test_services/local_product_service.py:227: in test_load_local_products_file_not_found\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 2 times.\nE   Calls: [call(\"Error loading products from JSON file: [Errno 2] No such file or directory: 'MagicMock/Path().parent.parent.parent.__truediv__().__truediv__()/140332228860752'\"),\nE    call(\"Error loading products from JSON file: [Errno 2] No such file or directory: 'MagicMock/Path().parent.parent.parent.__truediv__().__truediv__()/140332228860752'\")].\n___________________ test_load_local_products_valid_json_utf8 ___________________\ntests/test_services/local_product_service.py:253: in test_load_local_products_valid_json_utf8\n    assert products == TRANSFORMED_MOCK_PRODUCTS_DATA\nE   AssertionError: assert [{'availabili...R', ...}, ...] == [{'availabili...R', ...}, ...]\nE     At index 0 diff: {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 500, 'stock': 0, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'stock_count': 100, 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\nE     Full diff:\nE       [\nE        {'availability': 'in_stock',\nE         'brand': 'BrandX',\nE         'category': 'Category1',\nE         'currency': 'IDR',\nE         'description': 'Description A. A very good product.',\nE         'id': 'prod1',\nE         'images': ['https://example.com/prod1.jpg'],\nE         'name': 'Product A',\nE         'price': 100000,\nE         'reviews_count': 10,\nE         'specifications': {'condition': 'Baru',\nE                            'extra_spec': 'value1',\nE                            'rating': 4.5,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'BrandX Store',\nE     -                      'sold': 1000,\nE     ?                              ^^\nE     +                      'sold': 500,\nE     ?                              ^\nE     -                      'stock': 100},\nE     ?                               - --\nE     +                      'stock': 0,\nE     +                      'stock_count': 100},\nE         'url': 'https://shopee.co.id/prod1'},\nE        {'availability': 'out_of_stock',\nE         'brand': 'BrandY',\nE         'category': 'Category2',\nE         'currency': 'IDR',\nE         'description': 'Description B, also Product A related. A moderate product.',\nE         'id': 'prod2',\nE         'images': ['https://example.com/prod2.jpg'],\nE         'name': 'Product B',\nE         'price': 200000,\nE         'reviews_count': 5,\nE         'specifications': {'condition': 'Baru',\nE                            'rating': 3.8,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'BrandY Store',\nE     -                      'sold': 1000,\nE     ?                              ^^\nE     +                      'sold': 300,\nE     ?                              ^\nE     -                      'stock': 50},\nE     ?                               - -\nE     +                      'stock': 0,\nE     +                      'stock_count': 50},\nE         'url': 'https://shopee.co.id/prod2'},\nE        {'availability': 'in_stock',\nE         'brand': 'BrandX',\nE         'category': 'Category1',\nE         'currency': 'IDR',\nE         'description': 'Cheapest product, high quality. Very good.',\nE         'id': 'prod3',\nE         'images': ['https://example.com/prod3.jpg'],\nE         'name': 'Product C',\nE         'price': 50000,\nE         'reviews_count': 20,\nE         'specifications': {'condition': 'Baru',\nE                            'rating': 4.9,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'BrandX Store',\nE     -                      'sold': 1000,\nE     ?                               ^\nE     +                      'sold': 1200,\nE     ?                               ^\nE     -                      'stock': 200},\nE     ?                               - --\nE     +                      'stock': 0,\nE     +                      'stock_count': 200},\nE         'url': 'https://shopee.co.id/prod3'},\nE        {'availability': 'in_stock',\nE         'brand': 'BrandZ',\nE         'category': 'Category3',\nE         'currency': 'IDR',\nE         'description': 'Expensive gadget. This is a very pricy item.',\nE         'id': 'prod4',\nE         'images': ['https://example.com/prod4.jpg'],\nE         'name': 'Product D',\nE         'price': 5000000,\nE         'reviews_count': 2,\nE         'specifications': {'condition': 'Baru',\nE                            'rating': 4.0,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'BrandZ Store',\nE     -                      'sold': 1000,\nE     ?                                 -\nE     +                      'sold': 100,\nE     -                      'stock': 10},\nE     ?                               - -\nE     +                      'stock': 0,\nE     +                      'stock_count': 10},\nE         'url': 'https://shopee.co.id/prod4'},\nE        {'availability': 'in_stock',\nE         'brand': 'BrandX',\nE         'category': 'Category1',\nE         'currency': 'IDR',\nE         'description': 'Best seller in Category1. Popular choice.',\nE         'id': 'prod5',\nE         'images': ['https://example.com/prod5.jpg'],\nE         'name': 'Product E (Best Seller)',\nE         'price': 150000,\nE         'reviews_count': 150,\nE         'specifications': {'condition': 'Baru',\nE                            'rating': 4.6,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'BrandX Store',\nE     -                      'sold': 1000,\nE     +                      'sold': 15000,\nE     ?                               +\nE     -                      'stock': 1000},\nE     ?                               - ---\nE     +                      'stock': 0,\nE     +                      'stock_count': 1000},\nE         'url': 'https://shopee.co.id/prod5'},\nE        {'availability': 'in_stock',\nE         'brand': 'BrandY',\nE         'category': 'Category2',\nE         'currency': 'IDR',\nE         'description': 'A budget friendly product. Very affordable.',\nE         'id': 'prod6',\nE         'images': ['https://example.com/prod6.jpg'],\nE         'name': 'Product F (Budget)',\nE         'price': 4000000,\nE         'reviews_count': 1,\nE         'specifications': {'condition': 'Baru',\nE                            'rating': 3.0,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'BrandY Store',\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 50,\nE     ?                              ^\nE     -                      'stock': 20},\nE     ?                               - -\nE     +                      'stock': 0,\nE     +                      'stock_count': 20},\nE         'url': 'https://shopee.co.id/prod6'},\nE        {'availability': 'in_stock',\nE         'brand': '',\nE         'category': '',\nE         'currency': 'IDR',\nE         'description': 'This product has minimal details.',\nE         'id': 'prod7',\nE         'images': ['https://example.com/prod7.jpg'],\nE         'name': 'Minimal Product',\nE         'price': 0,\nE         'reviews_count': 0,\nE         'specifications': {'condition': 'Baru',\nE                            'rating': 0,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'Unknown Store',\nE                            'sold': 1000,\nE                            'stock': 0},\nE         'url': 'https://shopee.co.id/prod7'},\nE        {'availability': 'in_stock',\nE         'brand': '',\nE         'category': 'Electronics',\nE         'currency': 'IDR',\nE         'description': '',\nE         'id': 'prod8',\nE         'images': ['https://example.com/prod8.jpg'],\nE         'name': 'Custom Spec Product',\nE         'price': 750000,\nE         'reviews_count': 0,\nE         'specifications': {'condition': 'Baru',\nE                            'custom_field': 'custom_value',\nE                            'rating': 4.2,\nE                            'shop_location': 'Indonesia',\nE                            'shop_name': 'Unknown Store',\nE                            'sold': 1000,\nE     -                      'stock': 70},\nE     ?                               - -\nE     +                      'stock': 0,\nE     +                      'stock_count': 70},\nE         'url': 'https://shopee.co.id/prod8'},\nE       ]\n_____________ test_load_local_products_valid_json_utf16le_with_bom _____________\ntests/test_services/local_product_service.py:296: in test_load_local_products_valid_json_utf16le_with_bom\n    assert products == TRANSFORMED_MOCK_PRODUCTS_DATA\nE   AssertionError: assert [{'brand': 'A....', ...}, ...] == [{'availabili...R', ...}, ...]\nE     At index 0 diff: {'id': '1', 'name': 'iPhone 15 Pro Max', 'category': 'Smartphone', 'brand': 'Apple', 'price': 25000000, 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', 'specifications': {'rating': 4.8, 'sold': 1250, 'stock': 50, 'condition': 'Baru', 'shop_location': 'Jakarta', 'shop_name': 'Apple Store Indonesia', 'storage': '256GB', 'color': 'Titanium Natural', 'warranty': '1 Tahun', 'processor': 'A17 Pro', 'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto', 'display': '6.7 inch Super Retina XDR'}, 'images': ['https://example.com/iphone15.jpg'], 'url': 'https://shopee.co.id/iphone-15-pro-max'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\nE     Full diff:\nE       [\nE     +  {'brand': 'Apple',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     ?                ^   -----\nE     +   'category': 'Smartphone',\nE     ?                ^^ + ++++\nE         'currency': 'IDR',\nE     -   'description': 'Description A. A very good product.',\nE     +   'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan '\nE     +                  'layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium '\nE     +                  'design dan performa gaming yang luar biasa.',\nE     -   'id': 'prod1',\nE     ?          ----\nE     +   'id': '1',\nE     -   'images': ['https://example.com/prod1.jpg'],\nE     ?                                    ^ ^\nE     +   'images': ['https://example.com/iphone15.jpg'],\nE     ?                                   + ^ ^^ +\nE     -   'name': 'Product A',\nE     +   'name': 'iPhone 15 Pro Max',\nE     +   'price': 25000000,\nE     +   'specifications': {'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto',\nE     +                      'color': 'Titanium Natural',\nE     +                      'condition': 'Baru',\nE     +                      'display': '6.7 inch Super Retina XDR',\nE     +                      'processor': 'A17 Pro',\nE     +                      'rating': 4.8,\nE     +                      'shop_location': 'Jakarta',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 1250,\nE     +                      'stock': 50,\nE     +                      'storage': '256GB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/iphone-15-pro-max'},\nE     +  {'brand': 'Samsung',\nE     +   'category': 'Smartphone',\nE     +   'currency': 'IDR',\nE     +   'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI '\nE     +                  'features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan '\nE     +                  'layar AMOLED 6.8 inch.',\nE     +   'id': '2',\nE     +   'images': ['https://example.com/s24-ultra.jpg'],\nE     +   'name': 'Samsung Galaxy S24 Ultra',\nE     +   'price': 22000000,\nE     +   'specifications': {'camera': '200MP Main + 12MP Ultra Wide + 50MP Telephoto '\nE     +                                '+ 10MP Telephoto',\nE     +                      'color': 'Titanium Gray',\nE     +                      'condition': 'Baru',\nE     +                      'display': '6.8 inch Dynamic AMOLED 2X',\nE     +                      'processor': 'Snapdragon 8 Gen 3',\nE     +                      'rating': 4.7,\nE     +                      'shop_location': 'Surabaya',\nE     +                      'shop_name': 'Samsung Store',\nE     +                      'sold': 980,\nE     +                      'stock': 35,\nE     +                      'storage': '512GB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/samsung-s24-ultra'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Laptop',\nE     +   'currency': 'IDR',\nE     +   'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, '\nE     +                  'dan performa tinggi untuk profesional. Cocok untuk video '\nE     +                  'editing, programming, dan gaming.',\nE     +   'id': '3',\nE     +   'images': ['https://example.com/macbook-pro.jpg'],\nE     +   'name': 'MacBook Pro 14 inch M3',\nE     +   'price': 35000000,\nE     +   'specifications': {'color': 'Space Gray',\nE     +                      'condition': 'Baru',\nE     +                      'display': '14 inch Liquid Retina XDR',\nE     +                      'processor': 'Apple M3',\nE     +                      'ram': '16GB Unified Memory',\nE     +                      'rating': 4.9,\nE     +                      'shop_location': 'Jakarta',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 450,\nE     +                      'stock': 25,\nE     +                      'storage': '1TB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/macbook-pro-m3'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Audio',\nE     +   'currency': 'IDR',\nE     +   'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial '\nE     +                  'Audio. Dilengkapi dengan chip H2 untuk performa audio yang '\nE     +                  'lebih baik dan fitur Find My.',\nE     +   'id': '4',\nE     +   'images': ['https://example.com/airpods-pro.jpg'],\nE     +   'name': 'AirPods Pro 2nd Gen',\nE     +   'price': 4500000,\nE     +   'specifications': {'battery': '6 jam dengan ANC, 30 jam dengan case',\nE     +                      'color': 'White',\nE     +                      'condition': 'Baru',\nE     +                      'features': 'Active Noise Cancellation, Spatial Audio, '\nE     +                                  'Find My',\nE     +                      'rating': 4.6,\nE     +                      'shop_location': 'Bandung',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 2100,\nE     +                      'stock': 100,\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/airpods-pro-2'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Tablet',\nE     +   'currency': 'IDR',\nE     +   'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan '\nE     +                  'Apple Pencil support. Cocok untuk kreativitas, note-taking, '\nE     +                  'dan entertainment.',\nE     +   'id': '5',\nE     +   'images': ['https://example.com/ipad-air.jpg'],\nE     +   'name': 'iPad Air 5th Gen',\nE     -   'price': 100000,\nE     +   'price': 12000000,\nE     ?             ++\nE     -   'reviews_count': 10,\nE     -   'specifications': {'condition': 'Baru',\nE     ?                         ^^^^^ ^     ^^\nE     +   'specifications': {'color': 'Blue',\nE     ?                         ^ ^     ^ +\nE     -                      'extra_spec': 'value1',\nE     +                      'condition': 'Baru',\nE     +                      'display': '10.9 inch Liquid Retina',\nE     +                      'features': 'Apple Pencil support, Magic Keyboard support',\nE     +                      'processor': 'Apple M1',\nE                            'rating': 4.5,\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^ -------\nE     +                      'shop_location': 'Medan',\nE     ?                                        ^^^^\nE     -                      'shop_name': 'BrandX Store',\nE     ?                                    ^^^^^^\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     ?                                    ^^^^^      ++++++++++\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 750,\nE     ?                              ^^\nE     -                      'stock': 100},\nE     ?                               ^ --\nE     +                      'stock': 40,\nE     ?                               ^\nE     +                      'storage': '256GB',\nE     +                      'warranty': '1 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod1'},\nE     ?                                  ^^^\nE     +   'url': 'https://shopee.co.id/ipad-air-5'},\nE     ?                                + +++++ ^^\nE     +  {'brand': 'ASUS',\nE     -  {'availability': 'out_of_stock',\nE     -   'brand': 'BrandY',\nE     -   'category': 'Category2',\nE     ?                ^  -- ^^^\nE     +   'category': 'Laptop',\nE     ?                ^ +  ^\nE         'currency': 'IDR',\nE     -   'description': 'Description B, also Product A related. A moderate product.',\nE     +   'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen '\nE     +                  '7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard '\nE     +                  'dan cooling system yang powerful.',\nE     -   'id': 'prod2',\nE     ?          ^^^^^\nE     +   'id': '6',\nE     ?          ^\nE     -   'images': ['https://example.com/prod2.jpg'],\nE     ?                                   -  ^^\nE     +   'images': ['https://example.com/rog-strix.jpg'],\nE     ?                                     ^^^^^^^\nE     -   'name': 'Product B',\nE     +   'name': 'ASUS ROG Strix G15',\nE     -   'price': 200000,\nE     ?            ^\nE     +   'price': 18000000,\nE     ?            ^^^\nE     -   'reviews_count': 5,\nE     -   'specifications': {'condition': 'Baru',\nE     ?                         ^^^^^ ^      ^^\nE     +   'specifications': {'color': 'Black',\nE     ?                         ^ ^     + ^^\nE     +                      'condition': 'Baru',\nE     +                      'display': '15.6 inch FHD 144Hz',\nE     +                      'gpu': 'NVIDIA RTX 4060 8GB',\nE     +                      'processor': 'AMD Ryzen 7 7735HS',\nE     +                      'ram': '16GB DDR5',\nE     -                      'rating': 3.8,\nE     ?                                ^ ^\nE     +                      'rating': 4.4,\nE     ?                                ^ ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^^^^^^^^\nE     +                      'shop_location': 'Jakarta',\nE     ?                                        ^^^^^^\nE     -                      'shop_name': 'BrandY Store',\nE     ?                                    ^^^^^^\nE     +                      'shop_name': 'ASUS Store',\nE     ?                                    ^^^^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 320,\nE     ?                              ^^\nE     -                      'stock': 50},\nE     ?                                --\nE     +                      'stock': 15,\nE     ?                               +\nE     +                      'storage': '512GB SSD',\nE     +                      'warranty': '2 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod2'},\nE     ?                                ^  ^^\nE     +   'url': 'https://shopee.co.id/asus-rog-strix-g15'},\nE     ?                                ^^^^^  ^^^^^^^^^^^\nE     +  {'brand': 'Sony',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     ?                ^^^^^ ---\nE     +   'category': 'Audio',\nE     ?                ^^^^\nE         'currency': 'IDR',\nE     -   'description': 'Cheapest product, high quality. Very good.',\nE     +   'description': 'Headphone wireless Sony WH-1000XM5 dengan noise cancellation '\nE     +                  'terbaik di kelasnya. Dilengkapi dengan 30 jam battery life '\nE     +                  'dan quick charge.',\nE     -   'id': 'prod3',\nE     ?          ^^^^^\nE     +   'id': '7',\nE     ?          ^\nE     -   'images': ['https://example.com/prod3.jpg'],\nE     ?                                   ^^ ^^\nE     +   'images': ['https://example.com/sony-wh1000xm5.jpg'],\nE     ?                                   ^ ^^^^^^^^^^^^\nE     -   'name': 'Product C',\nE     +   'name': 'Sony WH-1000XM5',\nE     -   'price': 50000,\nE     +   'price': 5500000,\nE     ?            +     +\nE     -   'reviews_count': 20,\nE     -   'specifications': {'condition': 'Baru',\nE     +   'specifications': {'battery': '30 jam dengan ANC',\nE     +                      'color': 'Black',\nE     +                      'condition': 'Baru',\nE     +                      'features': 'Industry-leading noise cancellation, Quick '\nE     +                                  'Charge, Multipoint connection',\nE     -                      'rating': 4.9,\nE     ?                                  ^\nE     +                      'rating': 4.8,\nE     ?                                  ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^^^^^^^^\nE     +                      'shop_location': 'Surabaya',\nE     ?                                        ^^^^^^^\nE     -                      'shop_name': 'BrandX Store',\nE     ?                                    ^^^ ^^\nE     +                      'shop_name': 'Sony Store',\nE     ?                                    ^^ ^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 890,\nE     ?                              ^^\nE     -                      'stock': 200},\nE     ?                               ^ --\nE     +                      'stock': 30,\nE     ?                               ^\nE     +                      'warranty': '1 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod3'},\nE     ?                                ^^ ^^\nE     +   'url': 'https://shopee.co.id/sony-wh1000xm5'},\nE     ?                                ^ ^^^^^^^^^^^^\nE     +  {'brand': 'Samsung',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandZ',\nE     -   'category': 'Category3',\nE     ?                ^  ------\nE     +   'category': 'Tablet',\nE     ?                ^ +++\nE         'currency': 'IDR',\nE     -   'description': 'Expensive gadget. This is a very pricy item.',\nE     +   'description': 'Samsung Galaxy Tab S9 dengan S Pen, layar AMOLED 11 inch, '\nE     +                  'dan Snapdragon 8 Gen 2. Cocok untuk productivity dan '\nE     +                  'entertainment.',\nE     -   'id': 'prod4',\nE     ?          ^^^^^\nE     +   'id': '8',\nE     ?          ^\nE     -   'images': ['https://example.com/prod4.jpg'],\nE     ?                                   ^^^^^\nE     +   'images': ['https://example.com/galaxy-tab-s9.jpg'],\nE     ?                                   ^^^^^^^^^^^^^\nE     -   'name': 'Product D',\nE     +   'name': 'Samsung Galaxy Tab S9',\nE     -   'price': 5000000,\nE     +   'price': 15000000,\nE     ?            +\nE     -   'reviews_count': 2,\nE     -   'specifications': {'condition': 'Baru',\nE     +   'specifications': {'color': 'Graphite',\nE     +                      'condition': 'Baru',\nE     +                      'display': '11 inch Dynamic AMOLED 2X',\nE     +                      'features': 'S Pen included, DeX mode, Multi-window',\nE     +                      'processor': 'Snapdragon 8 Gen 2',\nE     -                      'rating': 4.0,\nE     ?                                  ^\nE     +                      'rating': 4.3,\nE     ?                                  ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^  ^ ^^^^\nE     +                      'shop_location': 'Bandung',\nE     ?                                        ^^  ^ ^\nE     -                      'shop_name': 'BrandZ Store',\nE     ?                                    ^^  ^^\nE     +                      'shop_name': 'Samsung Store',\nE     ?                                    ^ +++ ^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 280,\nE     ?                              ^^\nE     -                      'stock': 10},\nE     -   'url': 'https://shopee.co.id/prod4'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     -   'currency': 'IDR',\nE     -   'description': 'Best seller in Category1. Popular choice.',\nE     -   'id': 'prod5',\nE     -   'images': ['https://example.com/prod5.jpg'],\nE     -   'name': 'Product E (Best Seller)',\nE     -   'price': 150000,\nE     -   'reviews_count': 150,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 4.6,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'BrandX Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 1000},\nE     -   'url': 'https://shopee.co.id/prod5'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandY',\nE     -   'category': 'Category2',\nE     -   'currency': 'IDR',\nE     -   'description': 'A budget friendly product. Very affordable.',\nE     -   'id': 'prod6',\nE     -   'images': ['https://example.com/prod6.jpg'],\nE     -   'name': 'Product F (Budget)',\nE     -   'price': 4000000,\nE     -   'reviews_count': 1,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 3.0,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'BrandY Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 20},\nE     ?                                 -\nE     +                      'stock': 20,\nE     -   'url': 'https://shopee.co.id/prod6'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': '',\nE     -   'category': '',\nE     -   'currency': 'IDR',\nE     -   'description': 'This product has minimal details.',\nE     -   'id': 'prod7',\nE     -   'images': ['https://example.com/prod7.jpg'],\nE     -   'name': 'Minimal Product',\nE     -   'price': 0,\nE     -   'reviews_count': 0,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 0,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'Unknown Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 0},\nE     -   'url': 'https://shopee.co.id/prod7'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': '',\nE     -   'category': 'Electronics',\nE     -   'currency': 'IDR',\nE     -   'description': '',\nE     -   'id': 'prod8',\nE     -   'images': ['https://example.com/prod8.jpg'],\nE     -   'name': 'Custom Spec Product',\nE     -   'price': 750000,\nE     -   'reviews_count': 0,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'custom_field': 'custom_value',\nE     -                      'rating': 4.2,\nE     ?                         ---    ^^\nE     +                      'storage': '256GB',\nE     ?                       +++   +   ^ +++++\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/samsung-galaxy-tab-s9'},\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'Unknown Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 70},\nE     -   'url': 'https://shopee.co.id/prod8'},\nE       ]\n____ test_load_local_products_valid_json_utf8_sig_succeeds_after_utf8_fails ____\ntests/test_services/local_product_service.py:336: in test_load_local_products_valid_json_utf8_sig_succeeds_after_utf8_fails\n    assert products == TRANSFORMED_MOCK_PRODUCTS_DATA\nE   AssertionError: assert [{'brand': 'A....', ...}, ...] == [{'availabili...R', ...}, ...]\nE     At index 0 diff: {'id': '1', 'name': 'iPhone 15 Pro Max', 'category': 'Smartphone', 'brand': 'Apple', 'price': 25000000, 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', 'specifications': {'rating': 4.8, 'sold': 1250, 'stock': 50, 'condition': 'Baru', 'shop_location': 'Jakarta', 'shop_name': 'Apple Store Indonesia', 'storage': '256GB', 'color': 'Titanium Natural', 'warranty': '1 Tahun', 'processor': 'A17 Pro', 'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto', 'display': '6.7 inch Super Retina XDR'}, 'images': ['https://example.com/iphone15.jpg'], 'url': 'https://shopee.co.id/iphone-15-pro-max'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\nE     Full diff:\nE       [\nE     +  {'brand': 'Apple',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     ?                ^   -----\nE     +   'category': 'Smartphone',\nE     ?                ^^ + ++++\nE         'currency': 'IDR',\nE     -   'description': 'Description A. A very good product.',\nE     +   'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan '\nE     +                  'layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium '\nE     +                  'design dan performa gaming yang luar biasa.',\nE     -   'id': 'prod1',\nE     ?          ----\nE     +   'id': '1',\nE     -   'images': ['https://example.com/prod1.jpg'],\nE     ?                                    ^ ^\nE     +   'images': ['https://example.com/iphone15.jpg'],\nE     ?                                   + ^ ^^ +\nE     -   'name': 'Product A',\nE     +   'name': 'iPhone 15 Pro Max',\nE     +   'price': 25000000,\nE     +   'specifications': {'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto',\nE     +                      'color': 'Titanium Natural',\nE     +                      'condition': 'Baru',\nE     +                      'display': '6.7 inch Super Retina XDR',\nE     +                      'processor': 'A17 Pro',\nE     +                      'rating': 4.8,\nE     +                      'shop_location': 'Jakarta',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 1250,\nE     +                      'stock': 50,\nE     +                      'storage': '256GB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/iphone-15-pro-max'},\nE     +  {'brand': 'Samsung',\nE     +   'category': 'Smartphone',\nE     +   'currency': 'IDR',\nE     +   'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI '\nE     +                  'features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan '\nE     +                  'layar AMOLED 6.8 inch.',\nE     +   'id': '2',\nE     +   'images': ['https://example.com/s24-ultra.jpg'],\nE     +   'name': 'Samsung Galaxy S24 Ultra',\nE     +   'price': 22000000,\nE     +   'specifications': {'camera': '200MP Main + 12MP Ultra Wide + 50MP Telephoto '\nE     +                                '+ 10MP Telephoto',\nE     +                      'color': 'Titanium Gray',\nE     +                      'condition': 'Baru',\nE     +                      'display': '6.8 inch Dynamic AMOLED 2X',\nE     +                      'processor': 'Snapdragon 8 Gen 3',\nE     +                      'rating': 4.7,\nE     +                      'shop_location': 'Surabaya',\nE     +                      'shop_name': 'Samsung Store',\nE     +                      'sold': 980,\nE     +                      'stock': 35,\nE     +                      'storage': '512GB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/samsung-s24-ultra'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Laptop',\nE     +   'currency': 'IDR',\nE     +   'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, '\nE     +                  'dan performa tinggi untuk profesional. Cocok untuk video '\nE     +                  'editing, programming, dan gaming.',\nE     +   'id': '3',\nE     +   'images': ['https://example.com/macbook-pro.jpg'],\nE     +   'name': 'MacBook Pro 14 inch M3',\nE     +   'price': 35000000,\nE     +   'specifications': {'color': 'Space Gray',\nE     +                      'condition': 'Baru',\nE     +                      'display': '14 inch Liquid Retina XDR',\nE     +                      'processor': 'Apple M3',\nE     +                      'ram': '16GB Unified Memory',\nE     +                      'rating': 4.9,\nE     +                      'shop_location': 'Jakarta',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 450,\nE     +                      'stock': 25,\nE     +                      'storage': '1TB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/macbook-pro-m3'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Audio',\nE     +   'currency': 'IDR',\nE     +   'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial '\nE     +                  'Audio. Dilengkapi dengan chip H2 untuk performa audio yang '\nE     +                  'lebih baik dan fitur Find My.',\nE     +   'id': '4',\nE     +   'images': ['https://example.com/airpods-pro.jpg'],\nE     +   'name': 'AirPods Pro 2nd Gen',\nE     +   'price': 4500000,\nE     +   'specifications': {'battery': '6 jam dengan ANC, 30 jam dengan case',\nE     +                      'color': 'White',\nE     +                      'condition': 'Baru',\nE     +                      'features': 'Active Noise Cancellation, Spatial Audio, '\nE     +                                  'Find My',\nE     +                      'rating': 4.6,\nE     +                      'shop_location': 'Bandung',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 2100,\nE     +                      'stock': 100,\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/airpods-pro-2'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Tablet',\nE     +   'currency': 'IDR',\nE     +   'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan '\nE     +                  'Apple Pencil support. Cocok untuk kreativitas, note-taking, '\nE     +                  'dan entertainment.',\nE     +   'id': '5',\nE     +   'images': ['https://example.com/ipad-air.jpg'],\nE     +   'name': 'iPad Air 5th Gen',\nE     -   'price': 100000,\nE     +   'price': 12000000,\nE     ?             ++\nE     -   'reviews_count': 10,\nE     -   'specifications': {'condition': 'Baru',\nE     ?                         ^^^^^ ^     ^^\nE     +   'specifications': {'color': 'Blue',\nE     ?                         ^ ^     ^ +\nE     -                      'extra_spec': 'value1',\nE     +                      'condition': 'Baru',\nE     +                      'display': '10.9 inch Liquid Retina',\nE     +                      'features': 'Apple Pencil support, Magic Keyboard support',\nE     +                      'processor': 'Apple M1',\nE                            'rating': 4.5,\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^ -------\nE     +                      'shop_location': 'Medan',\nE     ?                                        ^^^^\nE     -                      'shop_name': 'BrandX Store',\nE     ?                                    ^^^^^^\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     ?                                    ^^^^^      ++++++++++\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 750,\nE     ?                              ^^\nE     -                      'stock': 100},\nE     ?                               ^ --\nE     +                      'stock': 40,\nE     ?                               ^\nE     +                      'storage': '256GB',\nE     +                      'warranty': '1 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod1'},\nE     ?                                  ^^^\nE     +   'url': 'https://shopee.co.id/ipad-air-5'},\nE     ?                                + +++++ ^^\nE     +  {'brand': 'ASUS',\nE     -  {'availability': 'out_of_stock',\nE     -   'brand': 'BrandY',\nE     -   'category': 'Category2',\nE     ?                ^  -- ^^^\nE     +   'category': 'Laptop',\nE     ?                ^ +  ^\nE         'currency': 'IDR',\nE     -   'description': 'Description B, also Product A related. A moderate product.',\nE     +   'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen '\nE     +                  '7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard '\nE     +                  'dan cooling system yang powerful.',\nE     -   'id': 'prod2',\nE     ?          ^^^^^\nE     +   'id': '6',\nE     ?          ^\nE     -   'images': ['https://example.com/prod2.jpg'],\nE     ?                                   -  ^^\nE     +   'images': ['https://example.com/rog-strix.jpg'],\nE     ?                                     ^^^^^^^\nE     -   'name': 'Product B',\nE     +   'name': 'ASUS ROG Strix G15',\nE     -   'price': 200000,\nE     ?            ^\nE     +   'price': 18000000,\nE     ?            ^^^\nE     -   'reviews_count': 5,\nE     -   'specifications': {'condition': 'Baru',\nE     ?                         ^^^^^ ^      ^^\nE     +   'specifications': {'color': 'Black',\nE     ?                         ^ ^     + ^^\nE     +                      'condition': 'Baru',\nE     +                      'display': '15.6 inch FHD 144Hz',\nE     +                      'gpu': 'NVIDIA RTX 4060 8GB',\nE     +                      'processor': 'AMD Ryzen 7 7735HS',\nE     +                      'ram': '16GB DDR5',\nE     -                      'rating': 3.8,\nE     ?                                ^ ^\nE     +                      'rating': 4.4,\nE     ?                                ^ ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^^^^^^^^\nE     +                      'shop_location': 'Jakarta',\nE     ?                                        ^^^^^^\nE     -                      'shop_name': 'BrandY Store',\nE     ?                                    ^^^^^^\nE     +                      'shop_name': 'ASUS Store',\nE     ?                                    ^^^^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 320,\nE     ?                              ^^\nE     -                      'stock': 50},\nE     ?                                --\nE     +                      'stock': 15,\nE     ?                               +\nE     +                      'storage': '512GB SSD',\nE     +                      'warranty': '2 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod2'},\nE     ?                                ^  ^^\nE     +   'url': 'https://shopee.co.id/asus-rog-strix-g15'},\nE     ?                                ^^^^^  ^^^^^^^^^^^\nE     +  {'brand': 'Sony',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     ?                ^^^^^ ---\nE     +   'category': 'Audio',\nE     ?                ^^^^\nE         'currency': 'IDR',\nE     -   'description': 'Cheapest product, high quality. Very good.',\nE     +   'description': 'Headphone wireless Sony WH-1000XM5 dengan noise cancellation '\nE     +                  'terbaik di kelasnya. Dilengkapi dengan 30 jam battery life '\nE     +                  'dan quick charge.',\nE     -   'id': 'prod3',\nE     ?          ^^^^^\nE     +   'id': '7',\nE     ?          ^\nE     -   'images': ['https://example.com/prod3.jpg'],\nE     ?                                   ^^ ^^\nE     +   'images': ['https://example.com/sony-wh1000xm5.jpg'],\nE     ?                                   ^ ^^^^^^^^^^^^\nE     -   'name': 'Product C',\nE     +   'name': 'Sony WH-1000XM5',\nE     -   'price': 50000,\nE     +   'price': 5500000,\nE     ?            +     +\nE     -   'reviews_count': 20,\nE     -   'specifications': {'condition': 'Baru',\nE     +   'specifications': {'battery': '30 jam dengan ANC',\nE     +                      'color': 'Black',\nE     +                      'condition': 'Baru',\nE     +                      'features': 'Industry-leading noise cancellation, Quick '\nE     +                                  'Charge, Multipoint connection',\nE     -                      'rating': 4.9,\nE     ?                                  ^\nE     +                      'rating': 4.8,\nE     ?                                  ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^^^^^^^^\nE     +                      'shop_location': 'Surabaya',\nE     ?                                        ^^^^^^^\nE     -                      'shop_name': 'BrandX Store',\nE     ?                                    ^^^ ^^\nE     +                      'shop_name': 'Sony Store',\nE     ?                                    ^^ ^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 890,\nE     ?                              ^^\nE     -                      'stock': 200},\nE     ?                               ^ --\nE     +                      'stock': 30,\nE     ?                               ^\nE     +                      'warranty': '1 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod3'},\nE     ?                                ^^ ^^\nE     +   'url': 'https://shopee.co.id/sony-wh1000xm5'},\nE     ?                                ^ ^^^^^^^^^^^^\nE     +  {'brand': 'Samsung',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandZ',\nE     -   'category': 'Category3',\nE     ?                ^  ------\nE     +   'category': 'Tablet',\nE     ?                ^ +++\nE         'currency': 'IDR',\nE     -   'description': 'Expensive gadget. This is a very pricy item.',\nE     +   'description': 'Samsung Galaxy Tab S9 dengan S Pen, layar AMOLED 11 inch, '\nE     +                  'dan Snapdragon 8 Gen 2. Cocok untuk productivity dan '\nE     +                  'entertainment.',\nE     -   'id': 'prod4',\nE     ?          ^^^^^\nE     +   'id': '8',\nE     ?          ^\nE     -   'images': ['https://example.com/prod4.jpg'],\nE     ?                                   ^^^^^\nE     +   'images': ['https://example.com/galaxy-tab-s9.jpg'],\nE     ?                                   ^^^^^^^^^^^^^\nE     -   'name': 'Product D',\nE     +   'name': 'Samsung Galaxy Tab S9',\nE     -   'price': 5000000,\nE     +   'price': 15000000,\nE     ?            +\nE     -   'reviews_count': 2,\nE     -   'specifications': {'condition': 'Baru',\nE     +   'specifications': {'color': 'Graphite',\nE     +                      'condition': 'Baru',\nE     +                      'display': '11 inch Dynamic AMOLED 2X',\nE     +                      'features': 'S Pen included, DeX mode, Multi-window',\nE     +                      'processor': 'Snapdragon 8 Gen 2',\nE     -                      'rating': 4.0,\nE     ?                                  ^\nE     +                      'rating': 4.3,\nE     ?                                  ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^  ^ ^^^^\nE     +                      'shop_location': 'Bandung',\nE     ?                                        ^^  ^ ^\nE     -                      'shop_name': 'BrandZ Store',\nE     ?                                    ^^  ^^\nE     +                      'shop_name': 'Samsung Store',\nE     ?                                    ^ +++ ^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 280,\nE     ?                              ^^\nE     -                      'stock': 10},\nE     -   'url': 'https://shopee.co.id/prod4'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     -   'currency': 'IDR',\nE     -   'description': 'Best seller in Category1. Popular choice.',\nE     -   'id': 'prod5',\nE     -   'images': ['https://example.com/prod5.jpg'],\nE     -   'name': 'Product E (Best Seller)',\nE     -   'price': 150000,\nE     -   'reviews_count': 150,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 4.6,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'BrandX Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 1000},\nE     -   'url': 'https://shopee.co.id/prod5'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandY',\nE     -   'category': 'Category2',\nE     -   'currency': 'IDR',\nE     -   'description': 'A budget friendly product. Very affordable.',\nE     -   'id': 'prod6',\nE     -   'images': ['https://example.com/prod6.jpg'],\nE     -   'name': 'Product F (Budget)',\nE     -   'price': 4000000,\nE     -   'reviews_count': 1,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 3.0,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'BrandY Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 20},\nE     ?                                 -\nE     +                      'stock': 20,\nE     -   'url': 'https://shopee.co.id/prod6'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': '',\nE     -   'category': '',\nE     -   'currency': 'IDR',\nE     -   'description': 'This product has minimal details.',\nE     -   'id': 'prod7',\nE     -   'images': ['https://example.com/prod7.jpg'],\nE     -   'name': 'Minimal Product',\nE     -   'price': 0,\nE     -   'reviews_count': 0,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 0,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'Unknown Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 0},\nE     -   'url': 'https://shopee.co.id/prod7'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': '',\nE     -   'category': 'Electronics',\nE     -   'currency': 'IDR',\nE     -   'description': '',\nE     -   'id': 'prod8',\nE     -   'images': ['https://example.com/prod8.jpg'],\nE     -   'name': 'Custom Spec Product',\nE     -   'price': 750000,\nE     -   'reviews_count': 0,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'custom_field': 'custom_value',\nE     -                      'rating': 4.2,\nE     ?                         ---    ^^\nE     +                      'storage': '256GB',\nE     ?                       +++   +   ^ +++++\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/samsung-galaxy-tab-s9'},\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'Unknown Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 70},\nE     -   'url': 'https://shopee.co.id/prod8'},\nE       ]\n____ test_load_local_products_valid_json_latin1_succeeds_after_others_fail _____\ntests/test_services/local_product_service.py:380: in test_load_local_products_valid_json_latin1_succeeds_after_others_fail\n    assert products == TRANSFORMED_MOCK_PRODUCTS_DATA\nE   AssertionError: assert [{'brand': 'A....', ...}, ...] == [{'availabili...R', ...}, ...]\nE     At index 0 diff: {'id': '1', 'name': 'iPhone 15 Pro Max', 'category': 'Smartphone', 'brand': 'Apple', 'price': 25000000, 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', 'specifications': {'rating': 4.8, 'sold': 1250, 'stock': 50, 'condition': 'Baru', 'shop_location': 'Jakarta', 'shop_name': 'Apple Store Indonesia', 'storage': '256GB', 'color': 'Titanium Natural', 'warranty': '1 Tahun', 'processor': 'A17 Pro', 'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto', 'display': '6.7 inch Super Retina XDR'}, 'images': ['https://example.com/iphone15.jpg'], 'url': 'https://shopee.co.id/iphone-15-pro-max'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\nE     Full diff:\nE       [\nE     +  {'brand': 'Apple',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     ?                ^   -----\nE     +   'category': 'Smartphone',\nE     ?                ^^ + ++++\nE         'currency': 'IDR',\nE     -   'description': 'Description A. A very good product.',\nE     +   'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan '\nE     +                  'layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium '\nE     +                  'design dan performa gaming yang luar biasa.',\nE     -   'id': 'prod1',\nE     ?          ----\nE     +   'id': '1',\nE     -   'images': ['https://example.com/prod1.jpg'],\nE     ?                                    ^ ^\nE     +   'images': ['https://example.com/iphone15.jpg'],\nE     ?                                   + ^ ^^ +\nE     -   'name': 'Product A',\nE     +   'name': 'iPhone 15 Pro Max',\nE     +   'price': 25000000,\nE     +   'specifications': {'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto',\nE     +                      'color': 'Titanium Natural',\nE     +                      'condition': 'Baru',\nE     +                      'display': '6.7 inch Super Retina XDR',\nE     +                      'processor': 'A17 Pro',\nE     +                      'rating': 4.8,\nE     +                      'shop_location': 'Jakarta',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 1250,\nE     +                      'stock': 50,\nE     +                      'storage': '256GB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/iphone-15-pro-max'},\nE     +  {'brand': 'Samsung',\nE     +   'category': 'Smartphone',\nE     +   'currency': 'IDR',\nE     +   'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI '\nE     +                  'features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan '\nE     +                  'layar AMOLED 6.8 inch.',\nE     +   'id': '2',\nE     +   'images': ['https://example.com/s24-ultra.jpg'],\nE     +   'name': 'Samsung Galaxy S24 Ultra',\nE     +   'price': 22000000,\nE     +   'specifications': {'camera': '200MP Main + 12MP Ultra Wide + 50MP Telephoto '\nE     +                                '+ 10MP Telephoto',\nE     +                      'color': 'Titanium Gray',\nE     +                      'condition': 'Baru',\nE     +                      'display': '6.8 inch Dynamic AMOLED 2X',\nE     +                      'processor': 'Snapdragon 8 Gen 3',\nE     +                      'rating': 4.7,\nE     +                      'shop_location': 'Surabaya',\nE     +                      'shop_name': 'Samsung Store',\nE     +                      'sold': 980,\nE     +                      'stock': 35,\nE     +                      'storage': '512GB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/samsung-s24-ultra'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Laptop',\nE     +   'currency': 'IDR',\nE     +   'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, '\nE     +                  'dan performa tinggi untuk profesional. Cocok untuk video '\nE     +                  'editing, programming, dan gaming.',\nE     +   'id': '3',\nE     +   'images': ['https://example.com/macbook-pro.jpg'],\nE     +   'name': 'MacBook Pro 14 inch M3',\nE     +   'price': 35000000,\nE     +   'specifications': {'color': 'Space Gray',\nE     +                      'condition': 'Baru',\nE     +                      'display': '14 inch Liquid Retina XDR',\nE     +                      'processor': 'Apple M3',\nE     +                      'ram': '16GB Unified Memory',\nE     +                      'rating': 4.9,\nE     +                      'shop_location': 'Jakarta',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 450,\nE     +                      'stock': 25,\nE     +                      'storage': '1TB',\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/macbook-pro-m3'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Audio',\nE     +   'currency': 'IDR',\nE     +   'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial '\nE     +                  'Audio. Dilengkapi dengan chip H2 untuk performa audio yang '\nE     +                  'lebih baik dan fitur Find My.',\nE     +   'id': '4',\nE     +   'images': ['https://example.com/airpods-pro.jpg'],\nE     +   'name': 'AirPods Pro 2nd Gen',\nE     +   'price': 4500000,\nE     +   'specifications': {'battery': '6 jam dengan ANC, 30 jam dengan case',\nE     +                      'color': 'White',\nE     +                      'condition': 'Baru',\nE     +                      'features': 'Active Noise Cancellation, Spatial Audio, '\nE     +                                  'Find My',\nE     +                      'rating': 4.6,\nE     +                      'shop_location': 'Bandung',\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     +                      'sold': 2100,\nE     +                      'stock': 100,\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/airpods-pro-2'},\nE     +  {'brand': 'Apple',\nE     +   'category': 'Tablet',\nE     +   'currency': 'IDR',\nE     +   'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan '\nE     +                  'Apple Pencil support. Cocok untuk kreativitas, note-taking, '\nE     +                  'dan entertainment.',\nE     +   'id': '5',\nE     +   'images': ['https://example.com/ipad-air.jpg'],\nE     +   'name': 'iPad Air 5th Gen',\nE     -   'price': 100000,\nE     +   'price': 12000000,\nE     ?             ++\nE     -   'reviews_count': 10,\nE     -   'specifications': {'condition': 'Baru',\nE     ?                         ^^^^^ ^     ^^\nE     +   'specifications': {'color': 'Blue',\nE     ?                         ^ ^     ^ +\nE     -                      'extra_spec': 'value1',\nE     +                      'condition': 'Baru',\nE     +                      'display': '10.9 inch Liquid Retina',\nE     +                      'features': 'Apple Pencil support, Magic Keyboard support',\nE     +                      'processor': 'Apple M1',\nE                            'rating': 4.5,\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^ -------\nE     +                      'shop_location': 'Medan',\nE     ?                                        ^^^^\nE     -                      'shop_name': 'BrandX Store',\nE     ?                                    ^^^^^^\nE     +                      'shop_name': 'Apple Store Indonesia',\nE     ?                                    ^^^^^      ++++++++++\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 750,\nE     ?                              ^^\nE     -                      'stock': 100},\nE     ?                               ^ --\nE     +                      'stock': 40,\nE     ?                               ^\nE     +                      'storage': '256GB',\nE     +                      'warranty': '1 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod1'},\nE     ?                                  ^^^\nE     +   'url': 'https://shopee.co.id/ipad-air-5'},\nE     ?                                + +++++ ^^\nE     +  {'brand': 'ASUS',\nE     -  {'availability': 'out_of_stock',\nE     -   'brand': 'BrandY',\nE     -   'category': 'Category2',\nE     ?                ^  -- ^^^\nE     +   'category': 'Laptop',\nE     ?                ^ +  ^\nE         'currency': 'IDR',\nE     -   'description': 'Description B, also Product A related. A moderate product.',\nE     +   'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen '\nE     +                  '7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard '\nE     +                  'dan cooling system yang powerful.',\nE     -   'id': 'prod2',\nE     ?          ^^^^^\nE     +   'id': '6',\nE     ?          ^\nE     -   'images': ['https://example.com/prod2.jpg'],\nE     ?                                   -  ^^\nE     +   'images': ['https://example.com/rog-strix.jpg'],\nE     ?                                     ^^^^^^^\nE     -   'name': 'Product B',\nE     +   'name': 'ASUS ROG Strix G15',\nE     -   'price': 200000,\nE     ?            ^\nE     +   'price': 18000000,\nE     ?            ^^^\nE     -   'reviews_count': 5,\nE     -   'specifications': {'condition': 'Baru',\nE     ?                         ^^^^^ ^      ^^\nE     +   'specifications': {'color': 'Black',\nE     ?                         ^ ^     + ^^\nE     +                      'condition': 'Baru',\nE     +                      'display': '15.6 inch FHD 144Hz',\nE     +                      'gpu': 'NVIDIA RTX 4060 8GB',\nE     +                      'processor': 'AMD Ryzen 7 7735HS',\nE     +                      'ram': '16GB DDR5',\nE     -                      'rating': 3.8,\nE     ?                                ^ ^\nE     +                      'rating': 4.4,\nE     ?                                ^ ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^^^^^^^^\nE     +                      'shop_location': 'Jakarta',\nE     ?                                        ^^^^^^\nE     -                      'shop_name': 'BrandY Store',\nE     ?                                    ^^^^^^\nE     +                      'shop_name': 'ASUS Store',\nE     ?                                    ^^^^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 320,\nE     ?                              ^^\nE     -                      'stock': 50},\nE     ?                                --\nE     +                      'stock': 15,\nE     ?                               +\nE     +                      'storage': '512GB SSD',\nE     +                      'warranty': '2 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod2'},\nE     ?                                ^  ^^\nE     +   'url': 'https://shopee.co.id/asus-rog-strix-g15'},\nE     ?                                ^^^^^  ^^^^^^^^^^^\nE     +  {'brand': 'Sony',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     ?                ^^^^^ ---\nE     +   'category': 'Audio',\nE     ?                ^^^^\nE         'currency': 'IDR',\nE     -   'description': 'Cheapest product, high quality. Very good.',\nE     +   'description': 'Headphone wireless Sony WH-1000XM5 dengan noise cancellation '\nE     +                  'terbaik di kelasnya. Dilengkapi dengan 30 jam battery life '\nE     +                  'dan quick charge.',\nE     -   'id': 'prod3',\nE     ?          ^^^^^\nE     +   'id': '7',\nE     ?          ^\nE     -   'images': ['https://example.com/prod3.jpg'],\nE     ?                                   ^^ ^^\nE     +   'images': ['https://example.com/sony-wh1000xm5.jpg'],\nE     ?                                   ^ ^^^^^^^^^^^^\nE     -   'name': 'Product C',\nE     +   'name': 'Sony WH-1000XM5',\nE     -   'price': 50000,\nE     +   'price': 5500000,\nE     ?            +     +\nE     -   'reviews_count': 20,\nE     -   'specifications': {'condition': 'Baru',\nE     +   'specifications': {'battery': '30 jam dengan ANC',\nE     +                      'color': 'Black',\nE     +                      'condition': 'Baru',\nE     +                      'features': 'Industry-leading noise cancellation, Quick '\nE     +                                  'Charge, Multipoint connection',\nE     -                      'rating': 4.9,\nE     ?                                  ^\nE     +                      'rating': 4.8,\nE     ?                                  ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^^^^^^^^\nE     +                      'shop_location': 'Surabaya',\nE     ?                                        ^^^^^^^\nE     -                      'shop_name': 'BrandX Store',\nE     ?                                    ^^^ ^^\nE     +                      'shop_name': 'Sony Store',\nE     ?                                    ^^ ^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 890,\nE     ?                              ^^\nE     -                      'stock': 200},\nE     ?                               ^ --\nE     +                      'stock': 30,\nE     ?                               ^\nE     +                      'warranty': '1 Tahun'},\nE     -   'url': 'https://shopee.co.id/prod3'},\nE     ?                                ^^ ^^\nE     +   'url': 'https://shopee.co.id/sony-wh1000xm5'},\nE     ?                                ^ ^^^^^^^^^^^^\nE     +  {'brand': 'Samsung',\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandZ',\nE     -   'category': 'Category3',\nE     ?                ^  ------\nE     +   'category': 'Tablet',\nE     ?                ^ +++\nE         'currency': 'IDR',\nE     -   'description': 'Expensive gadget. This is a very pricy item.',\nE     +   'description': 'Samsung Galaxy Tab S9 dengan S Pen, layar AMOLED 11 inch, '\nE     +                  'dan Snapdragon 8 Gen 2. Cocok untuk productivity dan '\nE     +                  'entertainment.',\nE     -   'id': 'prod4',\nE     ?          ^^^^^\nE     +   'id': '8',\nE     ?          ^\nE     -   'images': ['https://example.com/prod4.jpg'],\nE     ?                                   ^^^^^\nE     +   'images': ['https://example.com/galaxy-tab-s9.jpg'],\nE     ?                                   ^^^^^^^^^^^^^\nE     -   'name': 'Product D',\nE     +   'name': 'Samsung Galaxy Tab S9',\nE     -   'price': 5000000,\nE     +   'price': 15000000,\nE     ?            +\nE     -   'reviews_count': 2,\nE     -   'specifications': {'condition': 'Baru',\nE     +   'specifications': {'color': 'Graphite',\nE     +                      'condition': 'Baru',\nE     +                      'display': '11 inch Dynamic AMOLED 2X',\nE     +                      'features': 'S Pen included, DeX mode, Multi-window',\nE     +                      'processor': 'Snapdragon 8 Gen 2',\nE     -                      'rating': 4.0,\nE     ?                                  ^\nE     +                      'rating': 4.3,\nE     ?                                  ^\nE     -                      'shop_location': 'Indonesia',\nE     ?                                        ^  ^ ^^^^\nE     +                      'shop_location': 'Bandung',\nE     ?                                        ^^  ^ ^\nE     -                      'shop_name': 'BrandZ Store',\nE     ?                                    ^^  ^^\nE     +                      'shop_name': 'Samsung Store',\nE     ?                                    ^ +++ ^\nE     -                      'sold': 1000,\nE     ?                              ^^^\nE     +                      'sold': 280,\nE     ?                              ^^\nE     -                      'stock': 10},\nE     -   'url': 'https://shopee.co.id/prod4'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandX',\nE     -   'category': 'Category1',\nE     -   'currency': 'IDR',\nE     -   'description': 'Best seller in Category1. Popular choice.',\nE     -   'id': 'prod5',\nE     -   'images': ['https://example.com/prod5.jpg'],\nE     -   'name': 'Product E (Best Seller)',\nE     -   'price': 150000,\nE     -   'reviews_count': 150,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 4.6,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'BrandX Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 1000},\nE     -   'url': 'https://shopee.co.id/prod5'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': 'BrandY',\nE     -   'category': 'Category2',\nE     -   'currency': 'IDR',\nE     -   'description': 'A budget friendly product. Very affordable.',\nE     -   'id': 'prod6',\nE     -   'images': ['https://example.com/prod6.jpg'],\nE     -   'name': 'Product F (Budget)',\nE     -   'price': 4000000,\nE     -   'reviews_count': 1,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 3.0,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'BrandY Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 20},\nE     ?                                 -\nE     +                      'stock': 20,\nE     -   'url': 'https://shopee.co.id/prod6'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': '',\nE     -   'category': '',\nE     -   'currency': 'IDR',\nE     -   'description': 'This product has minimal details.',\nE     -   'id': 'prod7',\nE     -   'images': ['https://example.com/prod7.jpg'],\nE     -   'name': 'Minimal Product',\nE     -   'price': 0,\nE     -   'reviews_count': 0,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'rating': 0,\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'Unknown Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 0},\nE     -   'url': 'https://shopee.co.id/prod7'},\nE     -  {'availability': 'in_stock',\nE     -   'brand': '',\nE     -   'category': 'Electronics',\nE     -   'currency': 'IDR',\nE     -   'description': '',\nE     -   'id': 'prod8',\nE     -   'images': ['https://example.com/prod8.jpg'],\nE     -   'name': 'Custom Spec Product',\nE     -   'price': 750000,\nE     -   'reviews_count': 0,\nE     -   'specifications': {'condition': 'Baru',\nE     -                      'custom_field': 'custom_value',\nE     -                      'rating': 4.2,\nE     ?                         ---    ^^\nE     +                      'storage': '256GB',\nE     ?                       +++   +   ^ +++++\nE     +                      'warranty': '1 Tahun'},\nE     +   'url': 'https://shopee.co.id/samsung-galaxy-tab-s9'},\nE     -                      'shop_location': 'Indonesia',\nE     -                      'shop_name': 'Unknown Store',\nE     -                      'sold': 1000,\nE     -                      'stock': 70},\nE     -   'url': 'https://shopee.co.id/prod8'},\nE       ]\n___________ test_load_local_products_invalid_json_all_encodings_fail ___________\ntests/test_services/local_product_service.py:421: in test_load_local_products_invalid_json_all_encodings_fail\n    mock_logger.warning.assert_any_call(f\"Failed to load with {encoding} encoding: json.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: warning('Failed to load with utf-16-le encoding: json.JSONDecodeError: Expecting value: line 1 column 1 (char 0)') call not found\n_______ test_load_local_products_unicode_decode_error_all_encodings_fail _______\ntests/test_services/local_product_service.py:454: in test_load_local_products_unicode_decode_error_all_encodings_fail\n    mock_logger.warning.assert_any_call(f\"Failed to load with {encoding} encoding: mockcodec: mock reason\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: warning('Failed to load with utf-16-le encoding: mockcodec: mock reason') call not found\n__________________ test_load_local_products_generic_exception __________________\ntests/test_services/local_product_service.py:480: in test_load_local_products_generic_exception\n    mock_fallback.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected '_get_fallback_products' to have been called once. Called 2 times.\nE   Calls: [call(), call().__len__(), call()].\n_____________ test_load_local_products_empty_products_list_in_json _____________\ntests/test_services/local_product_service.py:502: in test_load_local_products_empty_products_list_in_json\n    mock_logger.info.assert_any_call(\"Successfully loaded 0 products from JSON file using utf-8 encoding\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: info('Successfully loaded 0 products from JSON file using utf-8 encoding') call not found\n______________ test_load_local_products_json_missing_products_key ______________\ntests/test_services/local_product_service.py:523: in test_load_local_products_json_missing_products_key\n    mock_logger.info.assert_any_call(\"Successfully loaded 0 products from JSON file using utf-8 encoding\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: info('Successfully loaded 0 products from JSON file using utf-8 encoding') call not found\n_____________ test_load_local_products_json_products_key_not_list ______________\ntests/test_services/local_product_service.py:544: in test_load_local_products_json_products_key_not_list\n    assert len(products) == 0 # Should fallback to empty list due to .get('products', [])\nE   AssertionError: assert 8 == 0\nE    +  where 8 = len([{'brand': 'Apple', 'category': 'Smartphone', 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', ...}, {'brand': 'Samsung', 'category': 'Smartphone', 'currency': 'IDR', 'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan layar AMOLED 6.8 inch.', ...}, {'brand': 'Apple', 'category': 'Laptop', 'currency': 'IDR', 'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, dan performa tinggi untuk profesional. Cocok untuk video editing, programming, dan gaming.', ...}, {'brand': 'Apple', 'category': 'Audio', 'currency': 'IDR', 'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial Audio. Dilengkapi dengan chip H2 untuk performa audio yang lebih baik dan fitur Find My.', ...}, {'brand': 'Apple', 'category': 'Tablet', 'currency': 'IDR', 'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan Apple Pencil support. Cocok untuk kreativitas, note-taking, dan entertainment.', ...}, {'brand': 'ASUS', 'category': 'Laptop', 'currency': 'IDR', 'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen 7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard dan cooling system yang powerful.', ...}, ...])\n________ test_load_local_products_transformation_with_extra_spec_fields ________\ntests/test_services/local_product_service.py:635: in test_load_local_products_transformation_with_extra_spec_fields\n    assert products[0]['specifications'] == expected_transformed_spec\nE   AssertionError: assert {'another_cus...ng': 4.2, ...} == {'another_cus...ng': 4.2, ...}\nE     Omitting 7 identical items, use -vv to show\nE     Differing items:\nE     {'stock': 0} != {'stock': 70}\nE     Left contains 1 more item:\nE     {'stock_count': 70}\nE     Full diff:\nE       {\nE        'another_custom': True,\nE        'condition': 'Baru',\nE        'custom_field': 'custom_value',\nE        'rating': 4.2,\nE        'shop_location': 'Indonesia',\nE        'shop_name': 'CustomBrand Store',\nE        'sold': 1000,\nE     -  'stock': 70,\nE     ?           -\nE     +  'stock': 0,\nE     +  'stock_count': 70,\nE       }\n____ test_load_local_products_transformation_product_not_dict_causes_error _____\ntests/test_services/local_product_service.py:663: in test_load_local_products_transformation_product_not_dict_causes_error\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 2 times.\nE   Calls: [call(\"Error loading products from JSON file: 'str' object has no attribute 'get'\"),\nE    call(\"Error loading products from JSON file: 'str' object has no attribute 'get'\")].\n______ test_load_local_products_first_encoding_succeeds_others_not_tried _______\ntests/test_services/local_product_service.py:700: in test_load_local_products_first_encoding_succeeds_others_not_tried\n    mock_logger.info.assert_any_call(f\"Successfully loaded {len(TRANSFORMED_MOCK_PRODUCTS_DATA)} products from JSON file using utf-8 encoding\")\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1010: in assert_any_call\n    raise AssertionError(\nE   AssertionError: info('Successfully loaded 8 products from JSON file using utf-8 encoding') call not found\n__________________ test_search_products_price_extraction_juta __________________\ntests/test_services/local_product_service.py:803: in test_search_products_price_extraction_juta\n    assert results[0]['id'] == 'prod1' # \"Product A\" match\nE   AssertionError: assert 'prod7' == 'prod1'\nE     - prod1\nE     ?     ^\nE     + prod7\nE     ?     ^\n_____________ test_search_products_price_extraction_budget_keyword _____________\ntests/test_services/local_product_service.py:871: in test_search_products_price_extraction_budget_keyword\n    assert 'prod4' in top_ids\nE   AssertionError: assert 'prod4' in {'prod1', 'prod3', 'prod7'}\n____ test_search_products_price_and_keyword_combined_without_budget_keyword ____\ntests/test_services/local_product_service.py:883: in test_search_products_price_and_keyword_combined_without_budget_keyword\n    assert len(results) == 2 # Only prod1 (price 100k) and prod7 (price 0) should match price\nE   AssertionError: assert 3 == 2\nE    +  where 3 = len([{'availability': 'in_stock', 'brand': '', 'category': '', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}])\n_____________________ test_search_products_error_handling ______________________\ntests/test_services/local_product_service.py:953: in test_search_products_error_handling\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 0 times.\n_____________________ test_extract_price_from_keyword_juta _____________________\ntests/test_services/local_product_service.py:960: in test_extract_price_from_keyword_juta\n    assert service._extract_price_from_keyword(\"5.5 juta\") is None # Only integer part extracted by regex\nE   AssertionError: assert 5000000 is None\nE    +  where 5000000 = <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d2d250>>('5.5 juta')\nE    +    where <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d2d250>> = <app.services.local_product_service.LocalProductService object at 0x7fa1a4d2d250>._extract_price_from_keyword\n______________________ test_extract_price_from_keyword_rp ______________________\ntests/test_services/local_product_service.py:973: in test_extract_price_from_keyword_rp\n    assert service._extract_price_from_keyword(\"RP. 500000\") == 500000 # Test with dot and different casing\nE   AssertionError: assert None == 500000\nE    +  where None = <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a49f37d0>>('RP. 500000')\nE    +    where <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a49f37d0>> = <app.services.local_product_service.LocalProductService object at 0x7fa1a49f37d0>._extract_price_from_keyword\n_____________________ test_extract_price_from_keyword_k_m ______________________\ntests/test_services/local_product_service.py:979: in test_extract_price_from_keyword_k_m\n    assert service._extract_price_from_keyword(\"2.5m\") is None # Only integer part extracted by regex\nE   AssertionError: assert 5000000 is None\nE    +  where 5000000 = <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d90450>>('2.5m')\nE    +    where <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d90450>> = <app.services.local_product_service.LocalProductService object at 0x7fa1a4d90450>._extract_price_from_keyword\n___________________ test_get_product_details_error_handling ____________________\ntests/test_services/local_product_service.py:1053: in test_get_product_details_error_handling\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 0 times.\n_______________________________ test_get_brands ________________________________\ntests/test_services/local_product_service.py:1097: in test_get_brands\n    assert sorted(brands) == sorted(['BrandX', 'BrandY', 'BrandZ', 'CustomBrand', '']) # '' for prod7, prod8 missing brand\nE   AssertionError: assert ['', 'BrandX'...dY', 'BrandZ'] == ['', 'BrandX'...'CustomBrand']\nE     Right contains one more item: 'CustomBrand'\nE     Full diff:\nE     - ['', 'BrandX', 'BrandY', 'BrandZ', 'CustomBrand']\nE     ?                                  ---------------\nE     + ['', 'BrandX', 'BrandY', 'BrandZ']\n_________________ test_get_products_by_category_error_handling _________________\ntests/test_services/local_product_service.py:1173: in test_get_products_by_category_error_handling\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 0 times.\n__________________ test_get_products_by_brand_error_handling ___________________\ntests/test_services/local_product_service.py:1222: in test_get_products_by_brand_error_handling\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 0 times.\n__________________ test_get_top_rated_products_error_handling __________________\ntests/test_services/local_product_service.py:1298: in test_get_top_rated_products_error_handling\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 0 times.\n________________ test_get_best_selling_products_error_handling _________________\ntests/test_services/local_product_service.py:1408: in test_get_best_selling_products_error_handling\n    mock_logger.error.assert_called_once()\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once\n    raise AssertionError(msg)\nE   AssertionError: Expected 'error' to have been called once. Called 0 times.\n_______________________ test_get_products_error_handling _______________________\ntests/test_services/local_product_service.py:1456: in test_get_products_error_handling\n    assert products == []\nE   AssertionError: assert <MagicMock na...332230027024'> == []\nE     Full diff:\nE     - []\nE     + <MagicMock name='mock.__getitem__()' id='140332230027024'>\n________________ test_smart_search_products_all_criteria_match _________________\ntests/test_services/local_product_service.py:1519: in test_smart_search_products_all_criteria_match\n    assert len(products) == 2\nE   AssertionError: assert 1 == 2\nE    +  where 1 = len([{'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}])\n__________ test_smart_search_products_no_match_all_fallbacks_popular ___________\ntests/test_services/local_product_service.py:1580: in test_smart_search_products_no_match_all_fallbacks_popular\n    assert len(products) == 2\nE   AssertionError: assert 1 == 2\nE    +  where 1 = len([{'availability': 'in_stock', 'brand': '', 'category': '', 'currency': 'IDR', ...}])\n___________ test_smart_search_products_empty_keyword_only_max_price ____________\ntests/test_services/local_product_service.py:1612: in test_smart_search_products_empty_keyword_only_max_price\n    assert products[0]['id'] == 'prod7'\nE   AssertionError: assert 'prod1' == 'prod7'\nE     - prod7\nE     ?     ^\nE     + prod1\nE     ?     ^\n__________________ test_smart_search_products_negative_limit ___________________\ntests/test_services/local_product_service.py:1647: in test_smart_search_products_negative_limit\n    assert len(products) == 0\nE   AssertionError: assert 7 == 0\nE    +  where 7 = len([{'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'out_of_stock', 'brand': 'BrandY', 'category': 'Category2', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandZ', 'category': 'Category3', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandY', 'category': 'Category2', 'currency': 'IDR', ...}, ...])\n=========================== short test summary info ============================\nFAILED tests/test_services/local_product_service.py::test_load_local_products_file_not_found - AssertionError: Expected 'error' to have been called once. Called 2 times.\nCalls: [call(\"Error loading products from JSON file: [Errno 2] No such file or directory: 'MagicMock/Path().parent.parent.parent.__truediv__().__truediv__()/140332228860752'\"),\n call(\"Error loading products from JSON file: [Errno 2] No such file or directory: 'MagicMock/Path().parent.parent.parent.__truediv__().__truediv__()/140332228860752'\")].\nFAILED tests/test_services/local_product_service.py::test_load_local_products_valid_json_utf8 - AssertionError: assert [{'availabili...R', ...}, ...] == [{'availabili...R', ...}, ...]\n  At index 0 diff: {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 500, 'stock': 0, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'stock_count': 100, 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\n  Full diff:\n    [\n     {'availability': 'in_stock',\n      'brand': 'BrandX',\n      'category': 'Category1',\n      'currency': 'IDR',\n      'description': 'Description A. A very good product.',\n      'id': 'prod1',\n      'images': ['https://example.com/prod1.jpg'],\n      'name': 'Product A',\n      'price': 100000,\n      'reviews_count': 10,\n      'specifications': {'condition': 'Baru',\n                         'extra_spec': 'value1',\n                         'rating': 4.5,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'BrandX Store',\n  -                      'sold': 1000,\n  ?                              ^^\n  +                      'sold': 500,\n  ?                              ^\n  -                      'stock': 100},\n  ?                               - --\n  +                      'stock': 0,\n  +                      'stock_count': 100},\n      'url': 'https://shopee.co.id/prod1'},\n     {'availability': 'out_of_stock',\n      'brand': 'BrandY',\n      'category': 'Category2',\n      'currency': 'IDR',\n      'description': 'Description B, also Product A related. A moderate product.',\n      'id': 'prod2',\n      'images': ['https://example.com/prod2.jpg'],\n      'name': 'Product B',\n      'price': 200000,\n      'reviews_count': 5,\n      'specifications': {'condition': 'Baru',\n                         'rating': 3.8,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'BrandY Store',\n  -                      'sold': 1000,\n  ?                              ^^\n  +                      'sold': 300,\n  ?                              ^\n  -                      'stock': 50},\n  ?                               - -\n  +                      'stock': 0,\n  +                      'stock_count': 50},\n      'url': 'https://shopee.co.id/prod2'},\n     {'availability': 'in_stock',\n      'brand': 'BrandX',\n      'category': 'Category1',\n      'currency': 'IDR',\n      'description': 'Cheapest product, high quality. Very good.',\n      'id': 'prod3',\n      'images': ['https://example.com/prod3.jpg'],\n      'name': 'Product C',\n      'price': 50000,\n      'reviews_count': 20,\n      'specifications': {'condition': 'Baru',\n                         'rating': 4.9,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'BrandX Store',\n  -                      'sold': 1000,\n  ?                               ^\n  +                      'sold': 1200,\n  ?                               ^\n  -                      'stock': 200},\n  ?                               - --\n  +                      'stock': 0,\n  +                      'stock_count': 200},\n      'url': 'https://shopee.co.id/prod3'},\n     {'availability': 'in_stock',\n      'brand': 'BrandZ',\n      'category': 'Category3',\n      'currency': 'IDR',\n      'description': 'Expensive gadget. This is a very pricy item.',\n      'id': 'prod4',\n      'images': ['https://example.com/prod4.jpg'],\n      'name': 'Product D',\n      'price': 5000000,\n      'reviews_count': 2,\n      'specifications': {'condition': 'Baru',\n                         'rating': 4.0,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'BrandZ Store',\n  -                      'sold': 1000,\n  ?                                 -\n  +                      'sold': 100,\n  -                      'stock': 10},\n  ?                               - -\n  +                      'stock': 0,\n  +                      'stock_count': 10},\n      'url': 'https://shopee.co.id/prod4'},\n     {'availability': 'in_stock',\n      'brand': 'BrandX',\n      'category': 'Category1',\n      'currency': 'IDR',\n      'description': 'Best seller in Category1. Popular choice.',\n      'id': 'prod5',\n      'images': ['https://example.com/prod5.jpg'],\n      'name': 'Product E (Best Seller)',\n      'price': 150000,\n      'reviews_count': 150,\n      'specifications': {'condition': 'Baru',\n                         'rating': 4.6,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'BrandX Store',\n  -                      'sold': 1000,\n  +                      'sold': 15000,\n  ?                               +\n  -                      'stock': 1000},\n  ?                               - ---\n  +                      'stock': 0,\n  +                      'stock_count': 1000},\n      'url': 'https://shopee.co.id/prod5'},\n     {'availability': 'in_stock',\n      'brand': 'BrandY',\n      'category': 'Category2',\n      'currency': 'IDR',\n      'description': 'A budget friendly product. Very affordable.',\n      'id': 'prod6',\n      'images': ['https://example.com/prod6.jpg'],\n      'name': 'Product F (Budget)',\n      'price': 4000000,\n      'reviews_count': 1,\n      'specifications': {'condition': 'Baru',\n                         'rating': 3.0,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'BrandY Store',\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 50,\n  ?                              ^\n  -                      'stock': 20},\n  ?                               - -\n  +                      'stock': 0,\n  +                      'stock_count': 20},\n      'url': 'https://shopee.co.id/prod6'},\n     {'availability': 'in_stock',\n      'brand': '',\n      'category': '',\n      'currency': 'IDR',\n      'description': 'This product has minimal details.',\n      'id': 'prod7',\n      'images': ['https://example.com/prod7.jpg'],\n      'name': 'Minimal Product',\n      'price': 0,\n      'reviews_count': 0,\n      'specifications': {'condition': 'Baru',\n                         'rating': 0,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'Unknown Store',\n                         'sold': 1000,\n                         'stock': 0},\n      'url': 'https://shopee.co.id/prod7'},\n     {'availability': 'in_stock',\n      'brand': '',\n      'category': 'Electronics',\n      'currency': 'IDR',\n      'description': '',\n      'id': 'prod8',\n      'images': ['https://example.com/prod8.jpg'],\n      'name': 'Custom Spec Product',\n      'price': 750000,\n      'reviews_count': 0,\n      'specifications': {'condition': 'Baru',\n                         'custom_field': 'custom_value',\n                         'rating': 4.2,\n                         'shop_location': 'Indonesia',\n                         'shop_name': 'Unknown Store',\n                         'sold': 1000,\n  -                      'stock': 70},\n  ?                               - -\n  +                      'stock': 0,\n  +                      'stock_count': 70},\n      'url': 'https://shopee.co.id/prod8'},\n    ]\nFAILED tests/test_services/local_product_service.py::test_load_local_products_valid_json_utf16le_with_bom - AssertionError: assert [{'brand': 'A....', ...}, ...] == [{'availabili...R', ...}, ...]\n  At index 0 diff: {'id': '1', 'name': 'iPhone 15 Pro Max', 'category': 'Smartphone', 'brand': 'Apple', 'price': 25000000, 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', 'specifications': {'rating': 4.8, 'sold': 1250, 'stock': 50, 'condition': 'Baru', 'shop_location': 'Jakarta', 'shop_name': 'Apple Store Indonesia', 'storage': '256GB', 'color': 'Titanium Natural', 'warranty': '1 Tahun', 'processor': 'A17 Pro', 'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto', 'display': '6.7 inch Super Retina XDR'}, 'images': ['https://example.com/iphone15.jpg'], 'url': 'https://shopee.co.id/iphone-15-pro-max'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\n  Full diff:\n    [\n  +  {'brand': 'Apple',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  ?                ^   -----\n  +   'category': 'Smartphone',\n  ?                ^^ + ++++\n      'currency': 'IDR',\n  -   'description': 'Description A. A very good product.',\n  +   'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan '\n  +                  'layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium '\n  +                  'design dan performa gaming yang luar biasa.',\n  -   'id': 'prod1',\n  ?          ----\n  +   'id': '1',\n  -   'images': ['https://example.com/prod1.jpg'],\n  ?                                    ^ ^\n  +   'images': ['https://example.com/iphone15.jpg'],\n  ?                                   + ^ ^^ +\n  -   'name': 'Product A',\n  +   'name': 'iPhone 15 Pro Max',\n  +   'price': 25000000,\n  +   'specifications': {'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto',\n  +                      'color': 'Titanium Natural',\n  +                      'condition': 'Baru',\n  +                      'display': '6.7 inch Super Retina XDR',\n  +                      'processor': 'A17 Pro',\n  +                      'rating': 4.8,\n  +                      'shop_location': 'Jakarta',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 1250,\n  +                      'stock': 50,\n  +                      'storage': '256GB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/iphone-15-pro-max'},\n  +  {'brand': 'Samsung',\n  +   'category': 'Smartphone',\n  +   'currency': 'IDR',\n  +   'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI '\n  +                  'features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan '\n  +                  'layar AMOLED 6.8 inch.',\n  +   'id': '2',\n  +   'images': ['https://example.com/s24-ultra.jpg'],\n  +   'name': 'Samsung Galaxy S24 Ultra',\n  +   'price': 22000000,\n  +   'specifications': {'camera': '200MP Main + 12MP Ultra Wide + 50MP Telephoto '\n  +                                '+ 10MP Telephoto',\n  +                      'color': 'Titanium Gray',\n  +                      'condition': 'Baru',\n  +                      'display': '6.8 inch Dynamic AMOLED 2X',\n  +                      'processor': 'Snapdragon 8 Gen 3',\n  +                      'rating': 4.7,\n  +                      'shop_location': 'Surabaya',\n  +                      'shop_name': 'Samsung Store',\n  +                      'sold': 980,\n  +                      'stock': 35,\n  +                      'storage': '512GB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/samsung-s24-ultra'},\n  +  {'brand': 'Apple',\n  +   'category': 'Laptop',\n  +   'currency': 'IDR',\n  +   'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, '\n  +                  'dan performa tinggi untuk profesional. Cocok untuk video '\n  +                  'editing, programming, dan gaming.',\n  +   'id': '3',\n  +   'images': ['https://example.com/macbook-pro.jpg'],\n  +   'name': 'MacBook Pro 14 inch M3',\n  +   'price': 35000000,\n  +   'specifications': {'color': 'Space Gray',\n  +                      'condition': 'Baru',\n  +                      'display': '14 inch Liquid Retina XDR',\n  +                      'processor': 'Apple M3',\n  +                      'ram': '16GB Unified Memory',\n  +                      'rating': 4.9,\n  +                      'shop_location': 'Jakarta',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 450,\n  +                      'stock': 25,\n  +                      'storage': '1TB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/macbook-pro-m3'},\n  +  {'brand': 'Apple',\n  +   'category': 'Audio',\n  +   'currency': 'IDR',\n  +   'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial '\n  +                  'Audio. Dilengkapi dengan chip H2 untuk performa audio yang '\n  +                  'lebih baik dan fitur Find My.',\n  +   'id': '4',\n  +   'images': ['https://example.com/airpods-pro.jpg'],\n  +   'name': 'AirPods Pro 2nd Gen',\n  +   'price': 4500000,\n  +   'specifications': {'battery': '6 jam dengan ANC, 30 jam dengan case',\n  +                      'color': 'White',\n  +                      'condition': 'Baru',\n  +                      'features': 'Active Noise Cancellation, Spatial Audio, '\n  +                                  'Find My',\n  +                      'rating': 4.6,\n  +                      'shop_location': 'Bandung',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 2100,\n  +                      'stock': 100,\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/airpods-pro-2'},\n  +  {'brand': 'Apple',\n  +   'category': 'Tablet',\n  +   'currency': 'IDR',\n  +   'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan '\n  +                  'Apple Pencil support. Cocok untuk kreativitas, note-taking, '\n  +                  'dan entertainment.',\n  +   'id': '5',\n  +   'images': ['https://example.com/ipad-air.jpg'],\n  +   'name': 'iPad Air 5th Gen',\n  -   'price': 100000,\n  +   'price': 12000000,\n  ?             ++\n  -   'reviews_count': 10,\n  -   'specifications': {'condition': 'Baru',\n  ?                         ^^^^^ ^     ^^\n  +   'specifications': {'color': 'Blue',\n  ?                         ^ ^     ^ +\n  -                      'extra_spec': 'value1',\n  +                      'condition': 'Baru',\n  +                      'display': '10.9 inch Liquid Retina',\n  +                      'features': 'Apple Pencil support, Magic Keyboard support',\n  +                      'processor': 'Apple M1',\n                         'rating': 4.5,\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^ -------\n  +                      'shop_location': 'Medan',\n  ?                                        ^^^^\n  -                      'shop_name': 'BrandX Store',\n  ?                                    ^^^^^^\n  +                      'shop_name': 'Apple Store Indonesia',\n  ?                                    ^^^^^      ++++++++++\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 750,\n  ?                              ^^\n  -                      'stock': 100},\n  ?                               ^ --\n  +                      'stock': 40,\n  ?                               ^\n  +                      'storage': '256GB',\n  +                      'warranty': '1 Tahun'},\n  -   'url': 'https://shopee.co.id/prod1'},\n  ?                                  ^^^\n  +   'url': 'https://shopee.co.id/ipad-air-5'},\n  ?                                + +++++ ^^\n  +  {'brand': 'ASUS',\n  -  {'availability': 'out_of_stock',\n  -   'brand': 'BrandY',\n  -   'category': 'Category2',\n  ?                ^  -- ^^^\n  +   'category': 'Laptop',\n  ?                ^ +  ^\n      'currency': 'IDR',\n  -   'description': 'Description B, also Product A related. A moderate product.',\n  +   'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen '\n  +                  '7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard '\n  +                  'dan cooling system yang powerful.',\n  -   'id': 'prod2',\n  ?          ^^^^^\n  +   'id': '6',\n  ?          ^\n  -   'images': ['https://example.com/prod2.jpg'],\n  ?                                   -  ^^\n  +   'images': ['https://example.com/rog-strix.jpg'],\n  ?                                     ^^^^^^^\n  -   'name': 'Product B',\n  +   'name': 'ASUS ROG Strix G15',\n  -   'price': 200000,\n  ?            ^\n  +   'price': 18000000,\n  ?            ^^^\n  -   'reviews_count': 5,\n  -   'specifications': {'condition': 'Baru',\n  ?                         ^^^^^ ^      ^^\n  +   'specifications': {'color': 'Black',\n  ?                         ^ ^     + ^^\n  +                      'condition': 'Baru',\n  +                      'display': '15.6 inch FHD 144Hz',\n  +                      'gpu': 'NVIDIA RTX 4060 8GB',\n  +                      'processor': 'AMD Ryzen 7 7735HS',\n  +                      'ram': '16GB DDR5',\n  -                      'rating': 3.8,\n  ?                                ^ ^\n  +                      'rating': 4.4,\n  ?                                ^ ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^^^^^^^^\n  +                      'shop_location': 'Jakarta',\n  ?                                        ^^^^^^\n  -                      'shop_name': 'BrandY Store',\n  ?                                    ^^^^^^\n  +                      'shop_name': 'ASUS Store',\n  ?                                    ^^^^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 320,\n  ?                              ^^\n  -                      'stock': 50},\n  ?                                --\n  +                      'stock': 15,\n  ?                               +\n  +                      'storage': '512GB SSD',\n  +                      'warranty': '2 Tahun'},\n  -   'url': 'https://shopee.co.id/prod2'},\n  ?                                ^  ^^\n  +   'url': 'https://shopee.co.id/asus-rog-strix-g15'},\n  ?                                ^^^^^  ^^^^^^^^^^^\n  +  {'brand': 'Sony',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  ?                ^^^^^ ---\n  +   'category': 'Audio',\n  ?                ^^^^\n      'currency': 'IDR',\n  -   'description': 'Cheapest product, high quality. Very good.',\n  +   'description': 'Headphone wireless Sony WH-1000XM5 dengan noise cancellation '\n  +                  'terbaik di kelasnya. Dilengkapi dengan 30 jam battery life '\n  +                  'dan quick charge.',\n  -   'id': 'prod3',\n  ?          ^^^^^\n  +   'id': '7',\n  ?          ^\n  -   'images': ['https://example.com/prod3.jpg'],\n  ?                                   ^^ ^^\n  +   'images': ['https://example.com/sony-wh1000xm5.jpg'],\n  ?                                   ^ ^^^^^^^^^^^^\n  -   'name': 'Product C',\n  +   'name': 'Sony WH-1000XM5',\n  -   'price': 50000,\n  +   'price': 5500000,\n  ?            +     +\n  -   'reviews_count': 20,\n  -   'specifications': {'condition': 'Baru',\n  +   'specifications': {'battery': '30 jam dengan ANC',\n  +                      'color': 'Black',\n  +                      'condition': 'Baru',\n  +                      'features': 'Industry-leading noise cancellation, Quick '\n  +                                  'Charge, Multipoint connection',\n  -                      'rating': 4.9,\n  ?                                  ^\n  +                      'rating': 4.8,\n  ?                                  ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^^^^^^^^\n  +                      'shop_location': 'Surabaya',\n  ?                                        ^^^^^^^\n  -                      'shop_name': 'BrandX Store',\n  ?                                    ^^^ ^^\n  +                      'shop_name': 'Sony Store',\n  ?                                    ^^ ^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 890,\n  ?                              ^^\n  -                      'stock': 200},\n  ?                               ^ --\n  +                      'stock': 30,\n  ?                               ^\n  +                      'warranty': '1 Tahun'},\n  -   'url': 'https://shopee.co.id/prod3'},\n  ?                                ^^ ^^\n  +   'url': 'https://shopee.co.id/sony-wh1000xm5'},\n  ?                                ^ ^^^^^^^^^^^^\n  +  {'brand': 'Samsung',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandZ',\n  -   'category': 'Category3',\n  ?                ^  ------\n  +   'category': 'Tablet',\n  ?                ^ +++\n      'currency': 'IDR',\n  -   'description': 'Expensive gadget. This is a very pricy item.',\n  +   'description': 'Samsung Galaxy Tab S9 dengan S Pen, layar AMOLED 11 inch, '\n  +                  'dan Snapdragon 8 Gen 2. Cocok untuk productivity dan '\n  +                  'entertainment.',\n  -   'id': 'prod4',\n  ?          ^^^^^\n  +   'id': '8',\n  ?          ^\n  -   'images': ['https://example.com/prod4.jpg'],\n  ?                                   ^^^^^\n  +   'images': ['https://example.com/galaxy-tab-s9.jpg'],\n  ?                                   ^^^^^^^^^^^^^\n  -   'name': 'Product D',\n  +   'name': 'Samsung Galaxy Tab S9',\n  -   'price': 5000000,\n  +   'price': 15000000,\n  ?            +\n  -   'reviews_count': 2,\n  -   'specifications': {'condition': 'Baru',\n  +   'specifications': {'color': 'Graphite',\n  +                      'condition': 'Baru',\n  +                      'display': '11 inch Dynamic AMOLED 2X',\n  +                      'features': 'S Pen included, DeX mode, Multi-window',\n  +                      'processor': 'Snapdragon 8 Gen 2',\n  -                      'rating': 4.0,\n  ?                                  ^\n  +                      'rating': 4.3,\n  ?                                  ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^  ^ ^^^^\n  +                      'shop_location': 'Bandung',\n  ?                                        ^^  ^ ^\n  -                      'shop_name': 'BrandZ Store',\n  ?                                    ^^  ^^\n  +                      'shop_name': 'Samsung Store',\n  ?                                    ^ +++ ^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 280,\n  ?                              ^^\n  -                      'stock': 10},\n  -   'url': 'https://shopee.co.id/prod4'},\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  -   'currency': 'IDR',\n  -   'description': 'Best seller in Category1. Popular choice.',\n  -   'id': 'prod5',\n  -   'images': ['https://example.com/prod5.jpg'],\n  -   'name': 'Product E (Best Seller)',\n  -   'price': 150000,\n  -   'reviews_count': 150,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 4.6,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'BrandX Store',\n  -                      'sold': 1000,\n  -                      'stock': 1000},\n  -   'url': 'https://shopee.co.id/prod5'},\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandY',\n  -   'category': 'Category2',\n  -   'currency': 'IDR',\n  -   'description': 'A budget friendly product. Very affordable.',\n  -   'id': 'prod6',\n  -   'images': ['https://example.com/prod6.jpg'],\n  -   'name': 'Product F (Budget)',\n  -   'price': 4000000,\n  -   'reviews_count': 1,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 3.0,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'BrandY Store',\n  -                      'sold': 1000,\n  -                      'stock': 20},\n  ?                                 -\n  +                      'stock': 20,\n  -   'url': 'https://shopee.co.id/prod6'},\n  -  {'availability': 'in_stock',\n  -   'brand': '',\n  -   'category': '',\n  -   'currency': 'IDR',\n  -   'description': 'This product has minimal details.',\n  -   'id': 'prod7',\n  -   'images': ['https://example.com/prod7.jpg'],\n  -   'name': 'Minimal Product',\n  -   'price': 0,\n  -   'reviews_count': 0,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 0,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'Unknown Store',\n  -                      'sold': 1000,\n  -                      'stock': 0},\n  -   'url': 'https://shopee.co.id/prod7'},\n  -  {'availability': 'in_stock',\n  -   'brand': '',\n  -   'category': 'Electronics',\n  -   'currency': 'IDR',\n  -   'description': '',\n  -   'id': 'prod8',\n  -   'images': ['https://example.com/prod8.jpg'],\n  -   'name': 'Custom Spec Product',\n  -   'price': 750000,\n  -   'reviews_count': 0,\n  -   'specifications': {'condition': 'Baru',\n  -                      'custom_field': 'custom_value',\n  -                      'rating': 4.2,\n  ?                         ---    ^^\n  +                      'storage': '256GB',\n  ?                       +++   +   ^ +++++\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/samsung-galaxy-tab-s9'},\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'Unknown Store',\n  -                      'sold': 1000,\n  -                      'stock': 70},\n  -   'url': 'https://shopee.co.id/prod8'},\n    ]\nFAILED tests/test_services/local_product_service.py::test_load_local_products_valid_json_utf8_sig_succeeds_after_utf8_fails - AssertionError: assert [{'brand': 'A....', ...}, ...] == [{'availabili...R', ...}, ...]\n  At index 0 diff: {'id': '1', 'name': 'iPhone 15 Pro Max', 'category': 'Smartphone', 'brand': 'Apple', 'price': 25000000, 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', 'specifications': {'rating': 4.8, 'sold': 1250, 'stock': 50, 'condition': 'Baru', 'shop_location': 'Jakarta', 'shop_name': 'Apple Store Indonesia', 'storage': '256GB', 'color': 'Titanium Natural', 'warranty': '1 Tahun', 'processor': 'A17 Pro', 'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto', 'display': '6.7 inch Super Retina XDR'}, 'images': ['https://example.com/iphone15.jpg'], 'url': 'https://shopee.co.id/iphone-15-pro-max'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\n  Full diff:\n    [\n  +  {'brand': 'Apple',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  ?                ^   -----\n  +   'category': 'Smartphone',\n  ?                ^^ + ++++\n      'currency': 'IDR',\n  -   'description': 'Description A. A very good product.',\n  +   'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan '\n  +                  'layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium '\n  +                  'design dan performa gaming yang luar biasa.',\n  -   'id': 'prod1',\n  ?          ----\n  +   'id': '1',\n  -   'images': ['https://example.com/prod1.jpg'],\n  ?                                    ^ ^\n  +   'images': ['https://example.com/iphone15.jpg'],\n  ?                                   + ^ ^^ +\n  -   'name': 'Product A',\n  +   'name': 'iPhone 15 Pro Max',\n  +   'price': 25000000,\n  +   'specifications': {'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto',\n  +                      'color': 'Titanium Natural',\n  +                      'condition': 'Baru',\n  +                      'display': '6.7 inch Super Retina XDR',\n  +                      'processor': 'A17 Pro',\n  +                      'rating': 4.8,\n  +                      'shop_location': 'Jakarta',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 1250,\n  +                      'stock': 50,\n  +                      'storage': '256GB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/iphone-15-pro-max'},\n  +  {'brand': 'Samsung',\n  +   'category': 'Smartphone',\n  +   'currency': 'IDR',\n  +   'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI '\n  +                  'features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan '\n  +                  'layar AMOLED 6.8 inch.',\n  +   'id': '2',\n  +   'images': ['https://example.com/s24-ultra.jpg'],\n  +   'name': 'Samsung Galaxy S24 Ultra',\n  +   'price': 22000000,\n  +   'specifications': {'camera': '200MP Main + 12MP Ultra Wide + 50MP Telephoto '\n  +                                '+ 10MP Telephoto',\n  +                      'color': 'Titanium Gray',\n  +                      'condition': 'Baru',\n  +                      'display': '6.8 inch Dynamic AMOLED 2X',\n  +                      'processor': 'Snapdragon 8 Gen 3',\n  +                      'rating': 4.7,\n  +                      'shop_location': 'Surabaya',\n  +                      'shop_name': 'Samsung Store',\n  +                      'sold': 980,\n  +                      'stock': 35,\n  +                      'storage': '512GB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/samsung-s24-ultra'},\n  +  {'brand': 'Apple',\n  +   'category': 'Laptop',\n  +   'currency': 'IDR',\n  +   'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, '\n  +                  'dan performa tinggi untuk profesional. Cocok untuk video '\n  +                  'editing, programming, dan gaming.',\n  +   'id': '3',\n  +   'images': ['https://example.com/macbook-pro.jpg'],\n  +   'name': 'MacBook Pro 14 inch M3',\n  +   'price': 35000000,\n  +   'specifications': {'color': 'Space Gray',\n  +                      'condition': 'Baru',\n  +                      'display': '14 inch Liquid Retina XDR',\n  +                      'processor': 'Apple M3',\n  +                      'ram': '16GB Unified Memory',\n  +                      'rating': 4.9,\n  +                      'shop_location': 'Jakarta',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 450,\n  +                      'stock': 25,\n  +                      'storage': '1TB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/macbook-pro-m3'},\n  +  {'brand': 'Apple',\n  +   'category': 'Audio',\n  +   'currency': 'IDR',\n  +   'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial '\n  +                  'Audio. Dilengkapi dengan chip H2 untuk performa audio yang '\n  +                  'lebih baik dan fitur Find My.',\n  +   'id': '4',\n  +   'images': ['https://example.com/airpods-pro.jpg'],\n  +   'name': 'AirPods Pro 2nd Gen',\n  +   'price': 4500000,\n  +   'specifications': {'battery': '6 jam dengan ANC, 30 jam dengan case',\n  +                      'color': 'White',\n  +                      'condition': 'Baru',\n  +                      'features': 'Active Noise Cancellation, Spatial Audio, '\n  +                                  'Find My',\n  +                      'rating': 4.6,\n  +                      'shop_location': 'Bandung',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 2100,\n  +                      'stock': 100,\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/airpods-pro-2'},\n  +  {'brand': 'Apple',\n  +   'category': 'Tablet',\n  +   'currency': 'IDR',\n  +   'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan '\n  +                  'Apple Pencil support. Cocok untuk kreativitas, note-taking, '\n  +                  'dan entertainment.',\n  +   'id': '5',\n  +   'images': ['https://example.com/ipad-air.jpg'],\n  +   'name': 'iPad Air 5th Gen',\n  -   'price': 100000,\n  +   'price': 12000000,\n  ?             ++\n  -   'reviews_count': 10,\n  -   'specifications': {'condition': 'Baru',\n  ?                         ^^^^^ ^     ^^\n  +   'specifications': {'color': 'Blue',\n  ?                         ^ ^     ^ +\n  -                      'extra_spec': 'value1',\n  +                      'condition': 'Baru',\n  +                      'display': '10.9 inch Liquid Retina',\n  +                      'features': 'Apple Pencil support, Magic Keyboard support',\n  +                      'processor': 'Apple M1',\n                         'rating': 4.5,\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^ -------\n  +                      'shop_location': 'Medan',\n  ?                                        ^^^^\n  -                      'shop_name': 'BrandX Store',\n  ?                                    ^^^^^^\n  +                      'shop_name': 'Apple Store Indonesia',\n  ?                                    ^^^^^      ++++++++++\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 750,\n  ?                              ^^\n  -                      'stock': 100},\n  ?                               ^ --\n  +                      'stock': 40,\n  ?                               ^\n  +                      'storage': '256GB',\n  +                      'warranty': '1 Tahun'},\n  -   'url': 'https://shopee.co.id/prod1'},\n  ?                                  ^^^\n  +   'url': 'https://shopee.co.id/ipad-air-5'},\n  ?                                + +++++ ^^\n  +  {'brand': 'ASUS',\n  -  {'availability': 'out_of_stock',\n  -   'brand': 'BrandY',\n  -   'category': 'Category2',\n  ?                ^  -- ^^^\n  +   'category': 'Laptop',\n  ?                ^ +  ^\n      'currency': 'IDR',\n  -   'description': 'Description B, also Product A related. A moderate product.',\n  +   'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen '\n  +                  '7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard '\n  +                  'dan cooling system yang powerful.',\n  -   'id': 'prod2',\n  ?          ^^^^^\n  +   'id': '6',\n  ?          ^\n  -   'images': ['https://example.com/prod2.jpg'],\n  ?                                   -  ^^\n  +   'images': ['https://example.com/rog-strix.jpg'],\n  ?                                     ^^^^^^^\n  -   'name': 'Product B',\n  +   'name': 'ASUS ROG Strix G15',\n  -   'price': 200000,\n  ?            ^\n  +   'price': 18000000,\n  ?            ^^^\n  -   'reviews_count': 5,\n  -   'specifications': {'condition': 'Baru',\n  ?                         ^^^^^ ^      ^^\n  +   'specifications': {'color': 'Black',\n  ?                         ^ ^     + ^^\n  +                      'condition': 'Baru',\n  +                      'display': '15.6 inch FHD 144Hz',\n  +                      'gpu': 'NVIDIA RTX 4060 8GB',\n  +                      'processor': 'AMD Ryzen 7 7735HS',\n  +                      'ram': '16GB DDR5',\n  -                      'rating': 3.8,\n  ?                                ^ ^\n  +                      'rating': 4.4,\n  ?                                ^ ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^^^^^^^^\n  +                      'shop_location': 'Jakarta',\n  ?                                        ^^^^^^\n  -                      'shop_name': 'BrandY Store',\n  ?                                    ^^^^^^\n  +                      'shop_name': 'ASUS Store',\n  ?                                    ^^^^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 320,\n  ?                              ^^\n  -                      'stock': 50},\n  ?                                --\n  +                      'stock': 15,\n  ?                               +\n  +                      'storage': '512GB SSD',\n  +                      'warranty': '2 Tahun'},\n  -   'url': 'https://shopee.co.id/prod2'},\n  ?                                ^  ^^\n  +   'url': 'https://shopee.co.id/asus-rog-strix-g15'},\n  ?                                ^^^^^  ^^^^^^^^^^^\n  +  {'brand': 'Sony',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  ?                ^^^^^ ---\n  +   'category': 'Audio',\n  ?                ^^^^\n      'currency': 'IDR',\n  -   'description': 'Cheapest product, high quality. Very good.',\n  +   'description': 'Headphone wireless Sony WH-1000XM5 dengan noise cancellation '\n  +                  'terbaik di kelasnya. Dilengkapi dengan 30 jam battery life '\n  +                  'dan quick charge.',\n  -   'id': 'prod3',\n  ?          ^^^^^\n  +   'id': '7',\n  ?          ^\n  -   'images': ['https://example.com/prod3.jpg'],\n  ?                                   ^^ ^^\n  +   'images': ['https://example.com/sony-wh1000xm5.jpg'],\n  ?                                   ^ ^^^^^^^^^^^^\n  -   'name': 'Product C',\n  +   'name': 'Sony WH-1000XM5',\n  -   'price': 50000,\n  +   'price': 5500000,\n  ?            +     +\n  -   'reviews_count': 20,\n  -   'specifications': {'condition': 'Baru',\n  +   'specifications': {'battery': '30 jam dengan ANC',\n  +                      'color': 'Black',\n  +                      'condition': 'Baru',\n  +                      'features': 'Industry-leading noise cancellation, Quick '\n  +                                  'Charge, Multipoint connection',\n  -                      'rating': 4.9,\n  ?                                  ^\n  +                      'rating': 4.8,\n  ?                                  ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^^^^^^^^\n  +                      'shop_location': 'Surabaya',\n  ?                                        ^^^^^^^\n  -                      'shop_name': 'BrandX Store',\n  ?                                    ^^^ ^^\n  +                      'shop_name': 'Sony Store',\n  ?                                    ^^ ^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 890,\n  ?                              ^^\n  -                      'stock': 200},\n  ?                               ^ --\n  +                      'stock': 30,\n  ?                               ^\n  +                      'warranty': '1 Tahun'},\n  -   'url': 'https://shopee.co.id/prod3'},\n  ?                                ^^ ^^\n  +   'url': 'https://shopee.co.id/sony-wh1000xm5'},\n  ?                                ^ ^^^^^^^^^^^^\n  +  {'brand': 'Samsung',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandZ',\n  -   'category': 'Category3',\n  ?                ^  ------\n  +   'category': 'Tablet',\n  ?                ^ +++\n      'currency': 'IDR',\n  -   'description': 'Expensive gadget. This is a very pricy item.',\n  +   'description': 'Samsung Galaxy Tab S9 dengan S Pen, layar AMOLED 11 inch, '\n  +                  'dan Snapdragon 8 Gen 2. Cocok untuk productivity dan '\n  +                  'entertainment.',\n  -   'id': 'prod4',\n  ?          ^^^^^\n  +   'id': '8',\n  ?          ^\n  -   'images': ['https://example.com/prod4.jpg'],\n  ?                                   ^^^^^\n  +   'images': ['https://example.com/galaxy-tab-s9.jpg'],\n  ?                                   ^^^^^^^^^^^^^\n  -   'name': 'Product D',\n  +   'name': 'Samsung Galaxy Tab S9',\n  -   'price': 5000000,\n  +   'price': 15000000,\n  ?            +\n  -   'reviews_count': 2,\n  -   'specifications': {'condition': 'Baru',\n  +   'specifications': {'color': 'Graphite',\n  +                      'condition': 'Baru',\n  +                      'display': '11 inch Dynamic AMOLED 2X',\n  +                      'features': 'S Pen included, DeX mode, Multi-window',\n  +                      'processor': 'Snapdragon 8 Gen 2',\n  -                      'rating': 4.0,\n  ?                                  ^\n  +                      'rating': 4.3,\n  ?                                  ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^  ^ ^^^^\n  +                      'shop_location': 'Bandung',\n  ?                                        ^^  ^ ^\n  -                      'shop_name': 'BrandZ Store',\n  ?                                    ^^  ^^\n  +                      'shop_name': 'Samsung Store',\n  ?                                    ^ +++ ^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 280,\n  ?                              ^^\n  -                      'stock': 10},\n  -   'url': 'https://shopee.co.id/prod4'},\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  -   'currency': 'IDR',\n  -   'description': 'Best seller in Category1. Popular choice.',\n  -   'id': 'prod5',\n  -   'images': ['https://example.com/prod5.jpg'],\n  -   'name': 'Product E (Best Seller)',\n  -   'price': 150000,\n  -   'reviews_count': 150,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 4.6,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'BrandX Store',\n  -                      'sold': 1000,\n  -                      'stock': 1000},\n  -   'url': 'https://shopee.co.id/prod5'},\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandY',\n  -   'category': 'Category2',\n  -   'currency': 'IDR',\n  -   'description': 'A budget friendly product. Very affordable.',\n  -   'id': 'prod6',\n  -   'images': ['https://example.com/prod6.jpg'],\n  -   'name': 'Product F (Budget)',\n  -   'price': 4000000,\n  -   'reviews_count': 1,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 3.0,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'BrandY Store',\n  -                      'sold': 1000,\n  -                      'stock': 20},\n  ?                                 -\n  +                      'stock': 20,\n  -   'url': 'https://shopee.co.id/prod6'},\n  -  {'availability': 'in_stock',\n  -   'brand': '',\n  -   'category': '',\n  -   'currency': 'IDR',\n  -   'description': 'This product has minimal details.',\n  -   'id': 'prod7',\n  -   'images': ['https://example.com/prod7.jpg'],\n  -   'name': 'Minimal Product',\n  -   'price': 0,\n  -   'reviews_count': 0,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 0,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'Unknown Store',\n  -                      'sold': 1000,\n  -                      'stock': 0},\n  -   'url': 'https://shopee.co.id/prod7'},\n  -  {'availability': 'in_stock',\n  -   'brand': '',\n  -   'category': 'Electronics',\n  -   'currency': 'IDR',\n  -   'description': '',\n  -   'id': 'prod8',\n  -   'images': ['https://example.com/prod8.jpg'],\n  -   'name': 'Custom Spec Product',\n  -   'price': 750000,\n  -   'reviews_count': 0,\n  -   'specifications': {'condition': 'Baru',\n  -                      'custom_field': 'custom_value',\n  -                      'rating': 4.2,\n  ?                         ---    ^^\n  +                      'storage': '256GB',\n  ?                       +++   +   ^ +++++\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/samsung-galaxy-tab-s9'},\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'Unknown Store',\n  -                      'sold': 1000,\n  -                      'stock': 70},\n  -   'url': 'https://shopee.co.id/prod8'},\n    ]\nFAILED tests/test_services/local_product_service.py::test_load_local_products_valid_json_latin1_succeeds_after_others_fail - AssertionError: assert [{'brand': 'A....', ...}, ...] == [{'availabili...R', ...}, ...]\n  At index 0 diff: {'id': '1', 'name': 'iPhone 15 Pro Max', 'category': 'Smartphone', 'brand': 'Apple', 'price': 25000000, 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', 'specifications': {'rating': 4.8, 'sold': 1250, 'stock': 50, 'condition': 'Baru', 'shop_location': 'Jakarta', 'shop_name': 'Apple Store Indonesia', 'storage': '256GB', 'color': 'Titanium Natural', 'warranty': '1 Tahun', 'processor': 'A17 Pro', 'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto', 'display': '6.7 inch Super Retina XDR'}, 'images': ['https://example.com/iphone15.jpg'], 'url': 'https://shopee.co.id/iphone-15-pro-max'} != {'id': 'prod1', 'name': 'Product A', 'category': 'Category1', 'brand': 'BrandX', 'price': 100000, 'currency': 'IDR', 'description': 'Description A. A very good product.', 'specifications': {'rating': 4.5, 'sold': 1000, 'stock': 100, 'condition': 'Baru', 'shop_location': 'Indonesia', 'shop_name': 'BrandX Store', 'extra_spec': 'value1'}, 'availability': 'in_stock', 'reviews_count': 10, 'images': ['https://example.com/prod1.jpg'], 'url': 'https://shopee.co.id/prod1'}\n  Full diff:\n    [\n  +  {'brand': 'Apple',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  ?                ^   -----\n  +   'category': 'Smartphone',\n  ?                ^^ + ++++\n      'currency': 'IDR',\n  -   'description': 'Description A. A very good product.',\n  +   'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan '\n  +                  'layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium '\n  +                  'design dan performa gaming yang luar biasa.',\n  -   'id': 'prod1',\n  ?          ----\n  +   'id': '1',\n  -   'images': ['https://example.com/prod1.jpg'],\n  ?                                    ^ ^\n  +   'images': ['https://example.com/iphone15.jpg'],\n  ?                                   + ^ ^^ +\n  -   'name': 'Product A',\n  +   'name': 'iPhone 15 Pro Max',\n  +   'price': 25000000,\n  +   'specifications': {'camera': '48MP Main + 12MP Ultra Wide + 12MP Telephoto',\n  +                      'color': 'Titanium Natural',\n  +                      'condition': 'Baru',\n  +                      'display': '6.7 inch Super Retina XDR',\n  +                      'processor': 'A17 Pro',\n  +                      'rating': 4.8,\n  +                      'shop_location': 'Jakarta',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 1250,\n  +                      'stock': 50,\n  +                      'storage': '256GB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/iphone-15-pro-max'},\n  +  {'brand': 'Samsung',\n  +   'category': 'Smartphone',\n  +   'currency': 'IDR',\n  +   'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI '\n  +                  'features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan '\n  +                  'layar AMOLED 6.8 inch.',\n  +   'id': '2',\n  +   'images': ['https://example.com/s24-ultra.jpg'],\n  +   'name': 'Samsung Galaxy S24 Ultra',\n  +   'price': 22000000,\n  +   'specifications': {'camera': '200MP Main + 12MP Ultra Wide + 50MP Telephoto '\n  +                                '+ 10MP Telephoto',\n  +                      'color': 'Titanium Gray',\n  +                      'condition': 'Baru',\n  +                      'display': '6.8 inch Dynamic AMOLED 2X',\n  +                      'processor': 'Snapdragon 8 Gen 3',\n  +                      'rating': 4.7,\n  +                      'shop_location': 'Surabaya',\n  +                      'shop_name': 'Samsung Store',\n  +                      'sold': 980,\n  +                      'stock': 35,\n  +                      'storage': '512GB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/samsung-s24-ultra'},\n  +  {'brand': 'Apple',\n  +   'category': 'Laptop',\n  +   'currency': 'IDR',\n  +   'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, '\n  +                  'dan performa tinggi untuk profesional. Cocok untuk video '\n  +                  'editing, programming, dan gaming.',\n  +   'id': '3',\n  +   'images': ['https://example.com/macbook-pro.jpg'],\n  +   'name': 'MacBook Pro 14 inch M3',\n  +   'price': 35000000,\n  +   'specifications': {'color': 'Space Gray',\n  +                      'condition': 'Baru',\n  +                      'display': '14 inch Liquid Retina XDR',\n  +                      'processor': 'Apple M3',\n  +                      'ram': '16GB Unified Memory',\n  +                      'rating': 4.9,\n  +                      'shop_location': 'Jakarta',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 450,\n  +                      'stock': 25,\n  +                      'storage': '1TB',\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/macbook-pro-m3'},\n  +  {'brand': 'Apple',\n  +   'category': 'Audio',\n  +   'currency': 'IDR',\n  +   'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial '\n  +                  'Audio. Dilengkapi dengan chip H2 untuk performa audio yang '\n  +                  'lebih baik dan fitur Find My.',\n  +   'id': '4',\n  +   'images': ['https://example.com/airpods-pro.jpg'],\n  +   'name': 'AirPods Pro 2nd Gen',\n  +   'price': 4500000,\n  +   'specifications': {'battery': '6 jam dengan ANC, 30 jam dengan case',\n  +                      'color': 'White',\n  +                      'condition': 'Baru',\n  +                      'features': 'Active Noise Cancellation, Spatial Audio, '\n  +                                  'Find My',\n  +                      'rating': 4.6,\n  +                      'shop_location': 'Bandung',\n  +                      'shop_name': 'Apple Store Indonesia',\n  +                      'sold': 2100,\n  +                      'stock': 100,\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/airpods-pro-2'},\n  +  {'brand': 'Apple',\n  +   'category': 'Tablet',\n  +   'currency': 'IDR',\n  +   'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan '\n  +                  'Apple Pencil support. Cocok untuk kreativitas, note-taking, '\n  +                  'dan entertainment.',\n  +   'id': '5',\n  +   'images': ['https://example.com/ipad-air.jpg'],\n  +   'name': 'iPad Air 5th Gen',\n  -   'price': 100000,\n  +   'price': 12000000,\n  ?             ++\n  -   'reviews_count': 10,\n  -   'specifications': {'condition': 'Baru',\n  ?                         ^^^^^ ^     ^^\n  +   'specifications': {'color': 'Blue',\n  ?                         ^ ^     ^ +\n  -                      'extra_spec': 'value1',\n  +                      'condition': 'Baru',\n  +                      'display': '10.9 inch Liquid Retina',\n  +                      'features': 'Apple Pencil support, Magic Keyboard support',\n  +                      'processor': 'Apple M1',\n                         'rating': 4.5,\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^ -------\n  +                      'shop_location': 'Medan',\n  ?                                        ^^^^\n  -                      'shop_name': 'BrandX Store',\n  ?                                    ^^^^^^\n  +                      'shop_name': 'Apple Store Indonesia',\n  ?                                    ^^^^^      ++++++++++\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 750,\n  ?                              ^^\n  -                      'stock': 100},\n  ?                               ^ --\n  +                      'stock': 40,\n  ?                               ^\n  +                      'storage': '256GB',\n  +                      'warranty': '1 Tahun'},\n  -   'url': 'https://shopee.co.id/prod1'},\n  ?                                  ^^^\n  +   'url': 'https://shopee.co.id/ipad-air-5'},\n  ?                                + +++++ ^^\n  +  {'brand': 'ASUS',\n  -  {'availability': 'out_of_stock',\n  -   'brand': 'BrandY',\n  -   'category': 'Category2',\n  ?                ^  -- ^^^\n  +   'category': 'Laptop',\n  ?                ^ +  ^\n      'currency': 'IDR',\n  -   'description': 'Description B, also Product A related. A moderate product.',\n  +   'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen '\n  +                  '7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard '\n  +                  'dan cooling system yang powerful.',\n  -   'id': 'prod2',\n  ?          ^^^^^\n  +   'id': '6',\n  ?          ^\n  -   'images': ['https://example.com/prod2.jpg'],\n  ?                                   -  ^^\n  +   'images': ['https://example.com/rog-strix.jpg'],\n  ?                                     ^^^^^^^\n  -   'name': 'Product B',\n  +   'name': 'ASUS ROG Strix G15',\n  -   'price': 200000,\n  ?            ^\n  +   'price': 18000000,\n  ?            ^^^\n  -   'reviews_count': 5,\n  -   'specifications': {'condition': 'Baru',\n  ?                         ^^^^^ ^      ^^\n  +   'specifications': {'color': 'Black',\n  ?                         ^ ^     + ^^\n  +                      'condition': 'Baru',\n  +                      'display': '15.6 inch FHD 144Hz',\n  +                      'gpu': 'NVIDIA RTX 4060 8GB',\n  +                      'processor': 'AMD Ryzen 7 7735HS',\n  +                      'ram': '16GB DDR5',\n  -                      'rating': 3.8,\n  ?                                ^ ^\n  +                      'rating': 4.4,\n  ?                                ^ ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^^^^^^^^\n  +                      'shop_location': 'Jakarta',\n  ?                                        ^^^^^^\n  -                      'shop_name': 'BrandY Store',\n  ?                                    ^^^^^^\n  +                      'shop_name': 'ASUS Store',\n  ?                                    ^^^^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 320,\n  ?                              ^^\n  -                      'stock': 50},\n  ?                                --\n  +                      'stock': 15,\n  ?                               +\n  +                      'storage': '512GB SSD',\n  +                      'warranty': '2 Tahun'},\n  -   'url': 'https://shopee.co.id/prod2'},\n  ?                                ^  ^^\n  +   'url': 'https://shopee.co.id/asus-rog-strix-g15'},\n  ?                                ^^^^^  ^^^^^^^^^^^\n  +  {'brand': 'Sony',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  ?                ^^^^^ ---\n  +   'category': 'Audio',\n  ?                ^^^^\n      'currency': 'IDR',\n  -   'description': 'Cheapest product, high quality. Very good.',\n  +   'description': 'Headphone wireless Sony WH-1000XM5 dengan noise cancellation '\n  +                  'terbaik di kelasnya. Dilengkapi dengan 30 jam battery life '\n  +                  'dan quick charge.',\n  -   'id': 'prod3',\n  ?          ^^^^^\n  +   'id': '7',\n  ?          ^\n  -   'images': ['https://example.com/prod3.jpg'],\n  ?                                   ^^ ^^\n  +   'images': ['https://example.com/sony-wh1000xm5.jpg'],\n  ?                                   ^ ^^^^^^^^^^^^\n  -   'name': 'Product C',\n  +   'name': 'Sony WH-1000XM5',\n  -   'price': 50000,\n  +   'price': 5500000,\n  ?            +     +\n  -   'reviews_count': 20,\n  -   'specifications': {'condition': 'Baru',\n  +   'specifications': {'battery': '30 jam dengan ANC',\n  +                      'color': 'Black',\n  +                      'condition': 'Baru',\n  +                      'features': 'Industry-leading noise cancellation, Quick '\n  +                                  'Charge, Multipoint connection',\n  -                      'rating': 4.9,\n  ?                                  ^\n  +                      'rating': 4.8,\n  ?                                  ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^^^^^^^^\n  +                      'shop_location': 'Surabaya',\n  ?                                        ^^^^^^^\n  -                      'shop_name': 'BrandX Store',\n  ?                                    ^^^ ^^\n  +                      'shop_name': 'Sony Store',\n  ?                                    ^^ ^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 890,\n  ?                              ^^\n  -                      'stock': 200},\n  ?                               ^ --\n  +                      'stock': 30,\n  ?                               ^\n  +                      'warranty': '1 Tahun'},\n  -   'url': 'https://shopee.co.id/prod3'},\n  ?                                ^^ ^^\n  +   'url': 'https://shopee.co.id/sony-wh1000xm5'},\n  ?                                ^ ^^^^^^^^^^^^\n  +  {'brand': 'Samsung',\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandZ',\n  -   'category': 'Category3',\n  ?                ^  ------\n  +   'category': 'Tablet',\n  ?                ^ +++\n      'currency': 'IDR',\n  -   'description': 'Expensive gadget. This is a very pricy item.',\n  +   'description': 'Samsung Galaxy Tab S9 dengan S Pen, layar AMOLED 11 inch, '\n  +                  'dan Snapdragon 8 Gen 2. Cocok untuk productivity dan '\n  +                  'entertainment.',\n  -   'id': 'prod4',\n  ?          ^^^^^\n  +   'id': '8',\n  ?          ^\n  -   'images': ['https://example.com/prod4.jpg'],\n  ?                                   ^^^^^\n  +   'images': ['https://example.com/galaxy-tab-s9.jpg'],\n  ?                                   ^^^^^^^^^^^^^\n  -   'name': 'Product D',\n  +   'name': 'Samsung Galaxy Tab S9',\n  -   'price': 5000000,\n  +   'price': 15000000,\n  ?            +\n  -   'reviews_count': 2,\n  -   'specifications': {'condition': 'Baru',\n  +   'specifications': {'color': 'Graphite',\n  +                      'condition': 'Baru',\n  +                      'display': '11 inch Dynamic AMOLED 2X',\n  +                      'features': 'S Pen included, DeX mode, Multi-window',\n  +                      'processor': 'Snapdragon 8 Gen 2',\n  -                      'rating': 4.0,\n  ?                                  ^\n  +                      'rating': 4.3,\n  ?                                  ^\n  -                      'shop_location': 'Indonesia',\n  ?                                        ^  ^ ^^^^\n  +                      'shop_location': 'Bandung',\n  ?                                        ^^  ^ ^\n  -                      'shop_name': 'BrandZ Store',\n  ?                                    ^^  ^^\n  +                      'shop_name': 'Samsung Store',\n  ?                                    ^ +++ ^\n  -                      'sold': 1000,\n  ?                              ^^^\n  +                      'sold': 280,\n  ?                              ^^\n  -                      'stock': 10},\n  -   'url': 'https://shopee.co.id/prod4'},\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandX',\n  -   'category': 'Category1',\n  -   'currency': 'IDR',\n  -   'description': 'Best seller in Category1. Popular choice.',\n  -   'id': 'prod5',\n  -   'images': ['https://example.com/prod5.jpg'],\n  -   'name': 'Product E (Best Seller)',\n  -   'price': 150000,\n  -   'reviews_count': 150,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 4.6,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'BrandX Store',\n  -                      'sold': 1000,\n  -                      'stock': 1000},\n  -   'url': 'https://shopee.co.id/prod5'},\n  -  {'availability': 'in_stock',\n  -   'brand': 'BrandY',\n  -   'category': 'Category2',\n  -   'currency': 'IDR',\n  -   'description': 'A budget friendly product. Very affordable.',\n  -   'id': 'prod6',\n  -   'images': ['https://example.com/prod6.jpg'],\n  -   'name': 'Product F (Budget)',\n  -   'price': 4000000,\n  -   'reviews_count': 1,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 3.0,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'BrandY Store',\n  -                      'sold': 1000,\n  -                      'stock': 20},\n  ?                                 -\n  +                      'stock': 20,\n  -   'url': 'https://shopee.co.id/prod6'},\n  -  {'availability': 'in_stock',\n  -   'brand': '',\n  -   'category': '',\n  -   'currency': 'IDR',\n  -   'description': 'This product has minimal details.',\n  -   'id': 'prod7',\n  -   'images': ['https://example.com/prod7.jpg'],\n  -   'name': 'Minimal Product',\n  -   'price': 0,\n  -   'reviews_count': 0,\n  -   'specifications': {'condition': 'Baru',\n  -                      'rating': 0,\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'Unknown Store',\n  -                      'sold': 1000,\n  -                      'stock': 0},\n  -   'url': 'https://shopee.co.id/prod7'},\n  -  {'availability': 'in_stock',\n  -   'brand': '',\n  -   'category': 'Electronics',\n  -   'currency': 'IDR',\n  -   'description': '',\n  -   'id': 'prod8',\n  -   'images': ['https://example.com/prod8.jpg'],\n  -   'name': 'Custom Spec Product',\n  -   'price': 750000,\n  -   'reviews_count': 0,\n  -   'specifications': {'condition': 'Baru',\n  -                      'custom_field': 'custom_value',\n  -                      'rating': 4.2,\n  ?                         ---    ^^\n  +                      'storage': '256GB',\n  ?                       +++   +   ^ +++++\n  +                      'warranty': '1 Tahun'},\n  +   'url': 'https://shopee.co.id/samsung-galaxy-tab-s9'},\n  -                      'shop_location': 'Indonesia',\n  -                      'shop_name': 'Unknown Store',\n  -                      'sold': 1000,\n  -                      'stock': 70},\n  -   'url': 'https://shopee.co.id/prod8'},\n    ]\nFAILED tests/test_services/local_product_service.py::test_load_local_products_invalid_json_all_encodings_fail - AssertionError: warning('Failed to load with utf-16-le encoding: json.JSONDecodeError: Expecting value: line 1 column 1 (char 0)') call not found\nFAILED tests/test_services/local_product_service.py::test_load_local_products_unicode_decode_error_all_encodings_fail - AssertionError: warning('Failed to load with utf-16-le encoding: mockcodec: mock reason') call not found\nFAILED tests/test_services/local_product_service.py::test_load_local_products_generic_exception - AssertionError: Expected '_get_fallback_products' to have been called once. Called 2 times.\nCalls: [call(), call().__len__(), call()].\nFAILED tests/test_services/local_product_service.py::test_load_local_products_empty_products_list_in_json - AssertionError: info('Successfully loaded 0 products from JSON file using utf-8 encoding') call not found\nFAILED tests/test_services/local_product_service.py::test_load_local_products_json_missing_products_key - AssertionError: info('Successfully loaded 0 products from JSON file using utf-8 encoding') call not found\nFAILED tests/test_services/local_product_service.py::test_load_local_products_json_products_key_not_list - AssertionError: assert 8 == 0\n +  where 8 = len([{'brand': 'Apple', 'category': 'Smartphone', 'currency': 'IDR', 'description': 'iPhone 15 Pro Max dengan chip A17 Pro, kamera 48MP, dan layar 6.7 inch Super Retina XDR. Dilengkapi dengan titanium design dan performa gaming yang luar biasa.', ...}, {'brand': 'Samsung', 'category': 'Smartphone', 'currency': 'IDR', 'description': 'Samsung Galaxy S24 Ultra dengan S Pen, kamera 200MP, dan AI features canggih. Dilengkapi dengan Snapdragon 8 Gen 3 dan layar AMOLED 6.8 inch.', ...}, {'brand': 'Apple', 'category': 'Laptop', 'currency': 'IDR', 'description': 'MacBook Pro dengan chip M3, layar 14 inch Liquid Retina XDR, dan performa tinggi untuk profesional. Cocok untuk video editing, programming, dan gaming.', ...}, {'brand': 'Apple', 'category': 'Audio', 'currency': 'IDR', 'description': 'AirPods Pro dengan Active Noise Cancellation dan Spatial Audio. Dilengkapi dengan chip H2 untuk performa audio yang lebih baik dan fitur Find My.', ...}, {'brand': 'Apple', 'category': 'Tablet', 'currency': 'IDR', 'description': 'iPad Air dengan chip M1, layar 10.9 inch Liquid Retina, dan Apple Pencil support. Cocok untuk kreativitas, note-taking, dan entertainment.', ...}, {'brand': 'ASUS', 'category': 'Laptop', 'currency': 'IDR', 'description': 'Laptop gaming ASUS ROG Strix G15 dengan RTX 4060, AMD Ryzen 7, dan layar 15.6 inch 144Hz. Dilengkapi dengan RGB keyboard dan cooling system yang powerful.', ...}, ...])\nFAILED tests/test_services/local_product_service.py::test_load_local_products_transformation_with_extra_spec_fields - AssertionError: assert {'another_cus...ng': 4.2, ...} == {'another_cus...ng': 4.2, ...}\n  Omitting 7 identical items, use -vv to show\n  Differing items:\n  {'stock': 0} != {'stock': 70}\n  Left contains 1 more item:\n  {'stock_count': 70}\n  Full diff:\n    {\n     'another_custom': True,\n     'condition': 'Baru',\n     'custom_field': 'custom_value',\n     'rating': 4.2,\n     'shop_location': 'Indonesia',\n     'shop_name': 'CustomBrand Store',\n     'sold': 1000,\n  -  'stock': 70,\n  ?           -\n  +  'stock': 0,\n  +  'stock_count': 70,\n    }\nFAILED tests/test_services/local_product_service.py::test_load_local_products_transformation_product_not_dict_causes_error - AssertionError: Expected 'error' to have been called once. Called 2 times.\nCalls: [call(\"Error loading products from JSON file: 'str' object has no attribute 'get'\"),\n call(\"Error loading products from JSON file: 'str' object has no attribute 'get'\")].\nFAILED tests/test_services/local_product_service.py::test_load_local_products_first_encoding_succeeds_others_not_tried - AssertionError: info('Successfully loaded 8 products from JSON file using utf-8 encoding') call not found\nFAILED tests/test_services/local_product_service.py::test_search_products_price_extraction_juta - AssertionError: assert 'prod7' == 'prod1'\n  - prod1\n  ?     ^\n  + prod7\n  ?     ^\nFAILED tests/test_services/local_product_service.py::test_search_products_price_extraction_budget_keyword - AssertionError: assert 'prod4' in {'prod1', 'prod3', 'prod7'}\nFAILED tests/test_services/local_product_service.py::test_search_products_price_and_keyword_combined_without_budget_keyword - AssertionError: assert 3 == 2\n +  where 3 = len([{'availability': 'in_stock', 'brand': '', 'category': '', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}])\nFAILED tests/test_services/local_product_service.py::test_search_products_error_handling - AssertionError: Expected 'error' to have been called once. Called 0 times.\nFAILED tests/test_services/local_product_service.py::test_extract_price_from_keyword_juta - AssertionError: assert 5000000 is None\n +  where 5000000 = <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d2d250>>('5.5 juta')\n +    where <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d2d250>> = <app.services.local_product_service.LocalProductService object at 0x7fa1a4d2d250>._extract_price_from_keyword\nFAILED tests/test_services/local_product_service.py::test_extract_price_from_keyword_rp - AssertionError: assert None == 500000\n +  where None = <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a49f37d0>>('RP. 500000')\n +    where <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a49f37d0>> = <app.services.local_product_service.LocalProductService object at 0x7fa1a49f37d0>._extract_price_from_keyword\nFAILED tests/test_services/local_product_service.py::test_extract_price_from_keyword_k_m - AssertionError: assert 5000000 is None\n +  where 5000000 = <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d90450>>('2.5m')\n +    where <bound method LocalProductService._extract_price_from_keyword of <app.services.local_product_service.LocalProductService object at 0x7fa1a4d90450>> = <app.services.local_product_service.LocalProductService object at 0x7fa1a4d90450>._extract_price_from_keyword\nFAILED tests/test_services/local_product_service.py::test_get_product_details_error_handling - AssertionError: Expected 'error' to have been called once. Called 0 times.\nFAILED tests/test_services/local_product_service.py::test_get_brands - AssertionError: assert ['', 'BrandX'...dY', 'BrandZ'] == ['', 'BrandX'...'CustomBrand']\n  Right contains one more item: 'CustomBrand'\n  Full diff:\n  - ['', 'BrandX', 'BrandY', 'BrandZ', 'CustomBrand']\n  ?                                  ---------------\n  + ['', 'BrandX', 'BrandY', 'BrandZ']\nFAILED tests/test_services/local_product_service.py::test_get_products_by_category_error_handling - AssertionError: Expected 'error' to have been called once. Called 0 times.\nFAILED tests/test_services/local_product_service.py::test_get_products_by_brand_error_handling - AssertionError: Expected 'error' to have been called once. Called 0 times.\nFAILED tests/test_services/local_product_service.py::test_get_top_rated_products_error_handling - AssertionError: Expected 'error' to have been called once. Called 0 times.\nFAILED tests/test_services/local_product_service.py::test_get_best_selling_products_error_handling - AssertionError: Expected 'error' to have been called once. Called 0 times.\nFAILED tests/test_services/local_product_service.py::test_get_products_error_handling - AssertionError: assert <MagicMock na...332230027024'> == []\n  Full diff:\n  - []\n  + <MagicMock name='mock.__getitem__()' id='140332230027024'>\nFAILED tests/test_services/local_product_service.py::test_smart_search_products_all_criteria_match - AssertionError: assert 1 == 2\n +  where 1 = len([{'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}])\nFAILED tests/test_services/local_product_service.py::test_smart_search_products_no_match_all_fallbacks_popular - AssertionError: assert 1 == 2\n +  where 1 = len([{'availability': 'in_stock', 'brand': '', 'category': '', 'currency': 'IDR', ...}])\nFAILED tests/test_services/local_product_service.py::test_smart_search_products_empty_keyword_only_max_price - AssertionError: assert 'prod1' == 'prod7'\n  - prod7\n  ?     ^\n  + prod1\n  ?     ^\nFAILED tests/test_services/local_product_service.py::test_smart_search_products_negative_limit - AssertionError: assert 7 == 0\n +  where 7 = len([{'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'out_of_stock', 'brand': 'BrandY', 'category': 'Category2', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandZ', 'category': 'Category3', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandX', 'category': 'Category1', 'currency': 'IDR', ...}, {'availability': 'in_stock', 'brand': 'BrandY', 'category': 'Category2', 'currency': 'IDR', ...}, ...])\n======================== 32 failed, 60 passed in 1.60s =========================\n",
        "stderr": "",
        "returncode": 1
      }
    },
    {
      "filepath": "app/services/product_data_service.py",
      "coverage": 20.73,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 50 items\n\ntests/test_services/product_data_service.py::TestProductDataService::test_init ERROR [  2%]\ntests/test_services/product_data_service.py::TestProductDataService::test_search_products_success ERROR [  4%]\ntests/test_services/product_data_service.py::TestProductDataService::test_search_products_no_results ERROR [  6%]\ntests/test_services/product_data_service.py::TestProductDataService::test_search_products_exception ERROR [  8%]\ntests/test_services/product_data_service.py::TestProductDataService::test_search_products_zero_limit ERROR [ 10%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_with_search ERROR [ 12%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_with_category ERROR [ 14%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_no_filters ERROR [ 16%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_search_precedence ERROR [ 18%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_exception_fallback ERROR [ 20%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_with_category_exception_fallback ERROR [ 22%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_no_filters_exception_fallback ERROR [ 24%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_default_limit ERROR [ 26%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_exception_in_fallback ERROR [ 28%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_categories_success ERROR [ 30%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_categories_empty ERROR [ 32%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_categories_exception ERROR [ 34%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_success ERROR [ 36%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_empty ERROR [ 38%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_zero_limit ERROR [ 40%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_exception ERROR [ 42%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_success ERROR [ 44%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_empty ERROR [ 46%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_zero_limit ERROR [ 48%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_exception ERROR [ 50%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_success ERROR [ 52%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_limit_exceeds_available ERROR [ 54%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_zero_limit ERROR [ 56%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_no_results ERROR [ 58%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_exception ERROR [ 60%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_success ERROR [ 62%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_default_limit ERROR [ 64%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_no_results ERROR [ 66%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_zero_limit ERROR [ 68%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_exception ERROR [ 70%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_product_details_success ERROR [ 72%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_product_details_not_found ERROR [ 74%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_product_details_exception ERROR [ 76%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_brands_success ERROR [ 78%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_brands_empty ERROR [ 80%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_brands_exception ERROR [ 82%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_success ERROR [ 84%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_limit_exceeds_available ERROR [ 86%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_zero_limit ERROR [ 88%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_no_results ERROR [ 90%]\ntests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_exception ERROR [ 92%]\ntests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_success ERROR [ 94%]\ntests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_default_args ERROR [ 96%]\ntests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_zero_limit ERROR [ 98%]\ntests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_exception ERROR [100%]\n\n==================================== ERRORS ====================================\n______________ ERROR at setup of TestProductDataService.test_init ______________\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 91\n      @pytest.mark.asyncio\n      async def test_init(self, mock_local_service, caplog):\n          \"\"\"Test ProductDataService initialization.\"\"\"\n          from app.services.product_data_service import ProductDataService\n          with caplog.at_level(logging.INFO):\n              service = ProductDataService()\n              assert service.local_service is mock_local_service\n              assert \"ProductDataService initialized with LocalProductService\" in caplog.text\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n____ ERROR at setup of TestProductDataService.test_search_products_success _____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 100\n      @pytest.mark.asyncio\n      async def test_search_products_success(self, product_data_service, mock_run_in_executor, caplog):\n          \"\"\"Test search_products returns products successfully.\"\"\"\n          expected_products = [{\"id\": \"1\", \"name\": \"Laptop\", \"price\": 1200}]\n          mock_run_in_executor.return_value = expected_products\n\n          with caplog.at_level(logging.INFO):\n              products = await product_data_service.search_products(\"laptop\", limit=5)\n              assert products == expected_products\n              assert \"Searching products with keyword: laptop\" in caplog.text\n              assert \"Found 1 products for keyword: laptop\" in caplog.text\n\n          # Verify run_in_executor was called with the correct local_service method and arguments\n          product_data_service.local_service.search_products.assert_called_once_with(\"laptop\", 5)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n___ ERROR at setup of TestProductDataService.test_search_products_no_results ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 115\n      @pytest.mark.asyncio\n      async def test_search_products_no_results(self, product_data_service, mock_run_in_executor, caplog):\n          \"\"\"Test search_products returns an empty list when no products are found.\"\"\"\n          mock_run_in_executor.return_value = []\n\n          with caplog.at_level(logging.INFO):\n              products = await product_data_service.search_products(\"nonexistent\", limit=10)\n              assert products == []\n              assert \"Found 0 products for keyword: nonexistent\" in caplog.text\n\n          product_data_service.local_service.search_products.assert_called_once_with(\"nonexistent\", 10)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n___ ERROR at setup of TestProductDataService.test_search_products_exception ____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 127\n      @pytest.mark.asyncio\n      async def test_search_products_exception(self, product_data_service, mock_run_in_executor, caplog):\n          \"\"\"Test search_products handles exceptions gracefully and logs an error.\"\"\"\n          mock_run_in_executor.side_effect = Exception(\"Local service error during search\")\n\n          with caplog.at_level(logging.ERROR):\n              products = await product_data_service.search_products(\"error_case\")\n              assert products == []\n              assert \"Error searching products: Local service error during search\" in caplog.text\n\n          product_data_service.local_service.search_products.assert_called_once_with(\"error_case\", 10)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n___ ERROR at setup of TestProductDataService.test_search_products_zero_limit ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 139\n      @pytest.mark.asyncio\n      async def test_search_products_zero_limit(self, product_data_service, mock_run_in_executor, caplog):\n          \"\"\"Test search_products with limit=0 returns an empty list.\"\"\"\n          mock_run_in_executor.return_value = [] # The underlying service should return 0 items for limit 0\n\n          with caplog.at_level(logging.INFO):\n              products = await product_data_service.search_products(\"any\", limit=0)\n              assert products == []\n              assert \"Found 0 products for keyword: any\" in caplog.text\n\n          product_data_service.local_service.search_products.assert_called_once_with(\"any\", 0)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n____ ERROR at setup of TestProductDataService.test_get_products_with_search ____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 152\n      @pytest.mark.asyncio\n      async def test_get_products_with_search(self, product_data_service, mock_run_in_executor):\n          \"\"\"Test get_products dispatches to search_products when 'search' keyword is present.\"\"\"\n          expected_products = [{\"id\": \"s1\", \"name\": \"Search Result\"}]\n          # Mock the underlying call that search_products uses\n          product_data_service.local_service.search_products.return_value = expected_products\n          mock_run_in_executor.return_value = expected_products # Ensures the await in search_products gets the value\n\n          products = await product_data_service.get_products(search=\"query\", limit=5)\n          assert products == expected_products\n          # Verify that local_service.search_products was called via run_in_executor\n          product_data_service.local_service.search_products.assert_called_once_with(\"query\", 5)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n___ ERROR at setup of TestProductDataService.test_get_products_with_category ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 165\n      @pytest.mark.asyncio\n      async def test_get_products_with_category(self, product_data_service):\n          \"\"\"Test get_products dispatches to get_products_by_category when 'category' is present.\"\"\"\n          expected_products = [{\"id\": \"c1\", \"name\": \"Category Item\"}]\n          # This will be called by ProductDataService's get_products_by_category method, not directly by get_products\n          product_data_service.local_service.get_products_by_category.return_value = expected_products\n\n          products = await product_data_service.get_products(category=\"electronics\", limit=10)\n          assert products == expected_products\n          # local_service's method is called by the ProductDataService's internal method\n          product_data_service.local_service.get_products_by_category.assert_called_once_with(\"electronics\")\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n____ ERROR at setup of TestProductDataService.test_get_products_no_filters _____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 177\n      @pytest.mark.asyncio\n      async def test_get_products_no_filters(self, product_data_service):\n          \"\"\"Test get_products dispatches to get_all_products when no filters are present.\"\"\"\n          expected_products = [{\"id\": \"a1\", \"name\": \"All Item\"}]\n          # This will be called by ProductDataService's get_all_products method\n          product_data_service.local_service.get_products.return_value = expected_products\n\n          products = await product_data_service.get_products(limit=15)\n          assert products == expected_products\n          # local_service's method is called by the ProductDataService's internal method\n          product_data_service.local_service.get_products.assert_called_once_with(15)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_search_precedence _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 189\n      @pytest.mark.asyncio\n      async def test_get_products_search_precedence(self, product_data_service, mock_run_in_executor):\n          \"\"\"Test get_products prioritizes 'search' over 'category' if both are provided.\"\"\"\n          expected_products = [{\"id\": \"s_prec\", \"name\": \"Search Precedence\"}]\n          product_data_service.local_service.search_products.return_value = expected_products\n          mock_run_in_executor.return_value = expected_products\n\n          products = await product_data_service.get_products(search=\"query\", category=\"ignored\", limit=5)\n          assert products == expected_products\n          product_data_service.local_service.search_products.assert_called_once_with(\"query\", 5)\n          product_data_service.local_service.get_products_by_category.assert_not_called() # Ensure category path was not taken\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_exception_fallback _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 201\n      @pytest.mark.asyncio\n      async def test_get_products_exception_fallback(self, product_data_service, mock_run_in_executor, caplog):\n          \"\"\"Test get_products falls back to local_service.get_products on error in 'search' dispatch.\"\"\"\n          # Simulate an error in the search path to trigger the fallback\n          mock_run_in_executor.side_effect = Exception(\"Search path failed\")\n\n          # Configure fallback method's return value\n          fallback_products = [{\"id\": \"fallback\", \"name\": \"Fallback Product\"}]\n          product_data_service.local_service.get_products.return_value = fallback_products\n\n          with caplog.at_level(logging.ERROR):\n              products = await product_data_service.get_products(search=\"err\", limit=5)\n              assert products == fallback_products\n              assert \"Error getting products: Search path failed\" in caplog.text\n\n          # Verify fallback call\n          product_data_service.local_service.get_products.assert_called_once_with(5)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_with_category_exception_fallback _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 219\n      @pytest.mark.asyncio\n      async def test_get_products_with_category_exception_fallback(self, product_data_service, mocker, caplog):\n          \"\"\"\n          Test get_products falls back to local_service.get_products when\n          get_products_by_category (called internally) raises an exception.\n          \"\"\"\n          # Patch the internal method get_products_by_category to raise an exception\n          mocker.patch.object(product_data_service, 'get_products_by_category', side_effect=Exception(\"Category processing failed\"))\n\n          # Configure fallback method's return value\n          fallback_products = [{\"id\": \"fallback_cat\", \"name\": \"Fallback Category Product\"}]\n          product_data_service.local_service.get_products.return_value = fallback_products\n\n          with caplog.at_level(logging.ERROR):\n              products = await product_data_service.get_products(category=\"error_cat\", limit=7)\n              assert products == fallback_products\n              assert \"Error getting products: Category processing failed\" in caplog.text\n\n          # Verify that get_products_by_category was attempted and then fallback occurred\n          product_data_service.get_products_by_category.assert_called_once_with(\"error_cat\", 7)\n          product_data_service.local_service.get_products.assert_called_once_with(7)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_no_filters_exception_fallback _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 242\n      @pytest.mark.asyncio\n      async def test_get_products_no_filters_exception_fallback(self, product_data_service, mocker, caplog):\n          \"\"\"\n          Test get_products falls back to local_service.get_products when\n          get_all_products (called internally) raises an exception.\n          \"\"\"\n          # Patch the internal method get_all_products to raise an exception\n          mocker.patch.object(product_data_service, 'get_all_products', side_effect=Exception(\"All products processing failed\"))\n\n          # Configure fallback method's return value\n          fallback_products = [{\"id\": \"fallback_all\", \"name\": \"Fallback All Product\"}]\n          product_data_service.local_service.get_products.return_value = fallback_products\n\n          with caplog.at_level(logging.ERROR):\n              products = await product_data_service.get_products(limit=12)\n              assert products == fallback_products\n              assert \"Error getting products: All products processing failed\" in caplog.text\n\n          # Verify that get_all_products was attempted and then fallback occurred\n          product_data_service.get_all_products.assert_called_once_with(12)\n          product_data_service.local_service.get_products.assert_called_once_with(12)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n___ ERROR at setup of TestProductDataService.test_get_products_default_limit ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 264\n      @pytest.mark.asyncio\n      async def test_get_products_default_limit(self, product_data_service):\n          \"\"\"Test get_products uses default limit when no filters are specified.\"\"\"\n          expected_products = [{\"id\": \"default\", \"name\": \"Default Limit Product\"}]\n          product_data_service.local_service.get_products.return_value = expected_products\n\n          products = await product_data_service.get_products() # No limit specified\n          assert products == expected_products\n          product_data_service.local_service.get_products.assert_called_once_with(20) # Default limit is 20\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_exception_in_fallback _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 274\n      @pytest.mark.asyncio\n      async def test_get_products_exception_in_fallback(self, product_data_service, mock_run_in_executor, caplog):\n          \"\"\"\n          Test get_products when the initial call fails, and the fallback local_service.get_products also fails,\n          leading to the exception propagating.\n          \"\"\"\n          # Simulate the initial path (e.g., search_products) raising an exception\n          mock_run_in_executor.side_effect = Exception(\"Initial search path failed\")\n\n          # Simulate the fallback call (local_service.get_products) also raising an exception\n          product_data_service.local_service.get_products.side_effect = Exception(\"Fallback local service failed\")\n\n          with caplog.at_level(logging.ERROR):\n              with pytest.raises(Exception, match=\"Fallback local service failed\"):\n                  await product_data_service.get_products(search=\"double_fail\", limit=5)\n\n              # Verify the first error was logged. The second exception propagates out.\n              assert \"Error getting products: Initial search path failed\" in caplog.text\n\n          # Verify both underlying calls were made\n          product_data_service.local_service.search_products.assert_called_once_with(\"double_fail\", 5) # Triggered by the search path\n          product_data_service.local_service.get_products.assert_called_once_with(5) # The fallback call\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_____ ERROR at setup of TestProductDataService.test_get_categories_success _____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 298\n      @pytest.mark.asyncio\n      async def test_get_categories_success(self, product_data_service):\n          \"\"\"Test get_categories returns categories successfully.\"\"\"\n          expected_categories = [\"Electronics\", \"Books\", \"Clothing\"]\n          product_data_service.local_service.get_categories.return_value = expected_categories\n\n          categories = await product_data_service.get_categories()\n          assert categories == expected_categories\n          product_data_service.local_service.get_categories.assert_called_once()\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n______ ERROR at setup of TestProductDataService.test_get_categories_empty ______\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 308\n      @pytest.mark.asyncio\n      async def test_get_categories_empty(self, product_data_service):\n          \"\"\"Test get_categories returns an empty list when no categories are available.\"\"\"\n          product_data_service.local_service.get_categories.return_value = []\n\n          categories = await product_data_service.get_categories()\n          assert categories == []\n          product_data_service.local_service.get_categories.assert_called_once()\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n____ ERROR at setup of TestProductDataService.test_get_categories_exception ____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 317\n      @pytest.mark.asyncio\n      async def test_get_categories_exception(self, product_data_service, caplog):\n          \"\"\"Test get_categories handles exceptions gracefully.\"\"\"\n          product_data_service.local_service.get_categories.side_effect = Exception(\"Category service down\")\n\n          with caplog.at_level(logging.ERROR):\n              categories = await product_data_service.get_categories()\n              assert categories == []\n              assert \"Error getting categories: Category service down\" in caplog.text\n\n          product_data_service.local_service.get_categories.assert_called_once()\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_top_rated_products_success _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 330\n      @pytest.mark.asyncio\n      async def test_get_top_rated_products_success(self, product_data_service):\n          \"\"\"Test get_top_rated_products returns products successfully.\"\"\"\n          expected_products = [{\"id\": \"t1\", \"name\": \"Top Product\", \"rating\": 5.0}]\n          product_data_service.local_service.get_top_rated_products.return_value = expected_products\n\n          products = await product_data_service.get_top_rated_products(limit=2)\n          assert products == expected_products\n          product_data_service.local_service.get_top_rated_products.assert_called_once_with(2)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n__ ERROR at setup of TestProductDataService.test_get_top_rated_products_empty __\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 340\n      @pytest.mark.asyncio\n      async def test_get_top_rated_products_empty(self, product_data_service):\n          \"\"\"Test get_top_rated_products returns empty list when no products are found.\"\"\"\n          product_data_service.local_service.get_top_rated_products.return_value = []\n          products = await product_data_service.get_top_rated_products(limit=5)\n          assert products == []\n          product_data_service.local_service.get_top_rated_products.assert_called_once_with(5)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_top_rated_products_zero_limit _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 348\n      @pytest.mark.asyncio\n      async def test_get_top_rated_products_zero_limit(self, product_data_service):\n          \"\"\"Test get_top_rated_products with limit=0 returns empty list.\"\"\"\n          product_data_service.local_service.get_top_rated_products.return_value = [] # The underlying service should return 0 for limit 0\n          products = await product_data_service.get_top_rated_products(limit=0)\n          assert products == []\n          product_data_service.local_service.get_top_rated_products.assert_called_once_with(0)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_top_rated_products_exception _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 356\n      @pytest.mark.asyncio\n      async def test_get_top_rated_products_exception(self, product_data_service, caplog):\n          \"\"\"Test get_top_rated_products handles exceptions gracefully.\"\"\"\n          product_data_service.local_service.get_top_rated_products.side_effect = Exception(\"Top rated service error\")\n\n          with caplog.at_level(logging.ERROR):\n              products = await product_data_service.get_top_rated_products()\n              assert products == []\n              assert \"Error getting top rated products: Top rated service error\" in caplog.text\n\n          product_data_service.local_service.get_top_rated_products.assert_called_once_with(10)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_best_selling_products_success _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 369\n      @pytest.mark.asyncio\n      async def test_get_best_selling_products_success(self, product_data_service):\n          \"\"\"Test get_best_selling_products returns products successfully.\"\"\"\n          expected_products = [{\"id\": \"b1\", \"name\": \"Best Seller\", \"sales\": 1000}]\n          product_data_service.local_service.get_best_selling_products.return_value = expected_products\n\n          products = await product_data_service.get_best_selling_products(limit=3)\n          assert products == expected_products\n          product_data_service.local_service.get_best_selling_products.assert_called_once_with(3)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_best_selling_products_empty _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 379\n      @pytest.mark.asyncio\n      async def test_get_best_selling_products_empty(self, product_data_service):\n          \"\"\"Test get_best_selling_products returns empty list when no products are found.\"\"\"\n          product_data_service.local_service.get_best_selling_products.return_value = []\n          products = await product_data_service.get_best_selling_products(limit=5)\n          assert products == []\n          product_data_service.local_service.get_best_selling_products.assert_called_once_with(5)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_best_selling_products_zero_limit _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 387\n      @pytest.mark.asyncio\n      async def test_get_best_selling_products_zero_limit(self, product_data_service):\n          \"\"\"Test get_best_selling_products with limit=0 returns empty list.\"\"\"\n          product_data_service.local_service.get_best_selling_products.return_value = [] # The underlying service should return 0 for limit 0\n          products = await product_data_service.get_best_selling_products(limit=0)\n          assert products == []\n          product_data_service.local_service.get_best_selling_products.assert_called_once_with(0)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_best_selling_products_exception _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 395\n      @pytest.mark.asyncio\n      async def test_get_best_selling_products_exception(self, product_data_service, caplog):\n          \"\"\"Test get_best_selling_products handles exceptions gracefully.\"\"\"\n          product_data_service.local_service.get_best_selling_products.side_effect = Exception(\"Best selling service error\")\n\n          with caplog.at_level(logging.ERROR):\n              products = await product_data_service.get_best_selling_products()\n              assert products == []\n              assert \"Error getting best selling products: Best selling service error\" in caplog.text\n\n          product_data_service.local_service.get_best_selling_products.assert_called_once_with(10)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_category_success _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 408\n      def test_get_products_by_category_success(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_category_limit_exceeds_available _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 419\n      def test_get_products_by_category_limit_exceeds_available(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_category_zero_limit _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 428\n      def test_get_products_by_category_zero_limit(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_category_no_results _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 437\n      def test_get_products_by_category_no_results(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_category_exception _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 445\n      def test_get_products_by_category_exception(self, product_data_service, caplog):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n____ ERROR at setup of TestProductDataService.test_get_all_products_success ____\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 457\n      def test_get_all_products_success(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_all_products_default_limit _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 467\n      def test_get_all_products_default_limit(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n__ ERROR at setup of TestProductDataService.test_get_all_products_no_results ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 476\n      def test_get_all_products_no_results(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n__ ERROR at setup of TestProductDataService.test_get_all_products_zero_limit ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 484\n      def test_get_all_products_zero_limit(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n___ ERROR at setup of TestProductDataService.test_get_all_products_exception ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 492\n      def test_get_all_products_exception(self, product_data_service, caplog):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n__ ERROR at setup of TestProductDataService.test_get_product_details_success ___\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 504\n      def test_get_product_details_success(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_product_details_not_found __\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 513\n      def test_get_product_details_not_found(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_product_details_exception __\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 521\n      def test_get_product_details_exception(self, product_data_service, caplog):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_______ ERROR at setup of TestProductDataService.test_get_brands_success _______\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 533\n      def test_get_brands_success(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n________ ERROR at setup of TestProductDataService.test_get_brands_empty ________\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 542\n      def test_get_brands_empty(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n______ ERROR at setup of TestProductDataService.test_get_brands_exception ______\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 550\n      def test_get_brands_exception(self, product_data_service, caplog):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_brand_success __\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 562\n      def test_get_products_by_brand_success(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_brand_limit_exceeds_available _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 572\n      def test_get_products_by_brand_limit_exceeds_available(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_brand_zero_limit _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 581\n      def test_get_products_by_brand_zero_limit(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_brand_no_results _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 589\n      def test_get_products_by_brand_no_results(self, product_data_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_get_products_by_brand_exception _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 597\n      def test_get_products_by_brand_exception(self, product_data_service, caplog):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_smart_search_products_success __\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 609\n      @pytest.mark.asyncio\n      async def test_smart_search_products_success(self, product_data_service, mock_run_in_executor):\n          \"\"\"Test smart_search_products returns products and message successfully.\"\"\"\n          expected_products = [{\"id\": \"s_s1\", \"name\": \"Smart Item\"}]\n          expected_message = \"Smart search completed.\"\n          mock_run_executor_result = (expected_products, expected_message)\n          mock_run_in_executor.return_value = mock_run_executor_result # What the await resolves to\n\n          products, message = await product_data_service.smart_search_products(\n              keyword=\"smart\", category=\"books\", max_price=50, limit=3\n          )\n          assert products == expected_products\n          assert message == expected_message\n\n          product_data_service.local_service.smart_search_products.assert_called_once_with(\n              \"smart\", \"books\", 50, 3\n          )\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_smart_search_products_default_args _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 627\n      @pytest.mark.asyncio\n      async def test_smart_search_products_default_args(self, product_data_service, mock_run_in_executor):\n          \"\"\"Test smart_search_products uses default arguments correctly.\"\"\"\n          expected_products = [{\"id\": \"s_s_def\", \"name\": \"Default Search\"}]\n          expected_message = \"Default search.\"\n          mock_run_executor_result = (expected_products, expected_message)\n          mock_run_in_executor.return_value = mock_run_executor_result\n\n          products, message = await product_data_service.smart_search_products() # No args\n          assert products == expected_products\n          assert message == expected_message\n\n          # Verify that the local service method was called with default values\n          product_data_service.local_service.smart_search_products.assert_called_once_with(\n              '', None, None, 5\n          )\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_smart_search_products_zero_limit _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 644\n      @pytest.mark.asyncio\n      async def test_smart_search_products_zero_limit(self, product_data_service, mock_run_in_executor):\n          \"\"\"Test smart_search_products with limit=0.\"\"\"\n          expected_products = []\n          expected_message = \"No results due to limit 0.\"\n          mock_run_executor_result = (expected_products, expected_message)\n          mock_run_in_executor.return_value = mock_run_executor_result\n\n          products, message = await product_data_service.smart_search_products(limit=0)\n          assert products == expected_products\n          assert message == expected_message\n          product_data_service.local_service.smart_search_products.assert_called_once_with('', None, None, 0)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n_ ERROR at setup of TestProductDataService.test_smart_search_products_exception _\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 658\n      @pytest.mark.asyncio\n      async def test_smart_search_products_exception(self, product_data_service, mock_run_in_executor):\n          \"\"\"Test smart_search_products propagates exceptions as it has no try-except.\"\"\"\n          mock_run_in_executor.side_effect = Exception(\"Smart search internal error\")\n\n          with pytest.raises(Exception, match=\"Smart search internal error\"):\n              await product_data_service.smart_search_products(\"fail_keyword\")\n\n          # Verify that the local service method was still attempted to be called\n          product_data_service.local_service.smart_search_products.assert_called_once_with(\"fail_keyword\", None, None, 5)\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 54\n  @pytest.fixture\n  def product_data_service(mock_local_service):\nfile /home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py, line 26\n  @pytest.fixture\n  def mock_local_service(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, cov, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_local_service, mock_run_in_executor, monkeypatch, no_cover, product_data_service, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tests/test_services/product_data_service.py::<event_loop>, tests/test_services/product_data_service.py::TestProductDataService::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/home/runner/work/ai-product-qa/ai-product-qa/tests/test_services/product_data_service.py:26\n=========================== short test summary info ============================\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_init\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_search_products_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_search_products_no_results\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_search_products_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_search_products_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_with_search\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_with_category\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_no_filters\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_search_precedence\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_exception_fallback\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_with_category_exception_fallback\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_no_filters_exception_fallback\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_default_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_exception_in_fallback\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_categories_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_categories_empty\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_categories_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_empty\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_top_rated_products_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_empty\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_best_selling_products_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_limit_exceeds_available\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_no_results\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_category_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_default_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_no_results\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_all_products_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_product_details_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_product_details_not_found\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_product_details_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_brands_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_brands_empty\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_brands_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_limit_exceeds_available\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_no_results\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_get_products_by_brand_exception\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_success\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_default_args\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_zero_limit\nERROR tests/test_services/product_data_service.py::TestProductDataService::test_smart_search_products_exception\n============================== 50 errors in 0.15s ==============================\n",
        "stderr": "",
        "returncode": 1
      }
    },
    {
      "filepath": "app/utils/config.py",
      "coverage": 86.36,
      "test_generated": true,
      "test_saved": true,
      "test_result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.11.13, pytest-7.4.3, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.11.13/x64/bin/python\ncachedir: .pytest_cache\nrootdir: /home/runner/work/ai-product-qa/ai-product-qa\nplugins: anyio-4.9.0, cov-4.1.0, asyncio-0.23.6\nasyncio: mode=Mode.STRICT\ncollecting ... collected 21 items\n\ntests/test_utils/config.py::TestSettings::test_settings_init_success_with_all_variables PASSED [  4%]\ntests/test_utils/config.py::TestSettings::test_settings_init_success_with_defaults PASSED [  9%]\ntests/test_utils/config.py::TestSettings::test_settings_init_with_direct_kwargs PASSED [ 14%]\ntests/test_utils/config.py::TestSettings::test_settings_init_raises_error_on_missing_google_api_key FAILED [ 19%]\ntests/test_utils/config.py::TestSettings::test_settings_init_raises_error_on_placeholder_google_api_key PASSED [ 23%]\ntests/test_utils/config.py::TestSettings::test_settings_init_raises_error_on_empty_string_google_api_key_kwarg FAILED [ 28%]\ntests/test_utils/config.py::TestSettings::test_settings_init_raises_error_on_empty_string_google_api_key_env_var PASSED [ 33%]\ntests/test_utils/config.py::TestSettings::test_settings_init_raises_validation_error_on_none_google_api_key_kwarg FAILED [ 38%]\ntests/test_utils/config.py::TestSettings::test_settings_init_fails_on_invalid_port_type FAILED [ 42%]\ntests/test_utils/config.py::TestSettings::test_settings_init_fails_on_invalid_debug_type FAILED [ 47%]\ntests/test_utils/config.py::TestSettings::test_settings_init_success_debug_from_string_true PASSED [ 52%]\ntests/test_utils/config.py::TestSettings::test_settings_init_success_debug_from_string_false PASSED [ 57%]\ntests/test_utils/config.py::TestSettings::test_settings_init_success_debug_from_string_one PASSED [ 61%]\ntests/test_utils/config.py::TestSettings::test_settings_init_success_debug_from_string_zero PASSED [ 66%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_get_settings_returns_settings_instance PASSED [ 71%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_get_settings_uses_lru_cache PASSED [ 76%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_global_settings_is_initialized_correctly PASSED [ 80%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_global_settings_is_immutable_after_initial_import PASSED [ 85%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_global_settings_fails_on_missing_key_at_import FAILED [ 90%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_global_settings_fails_on_placeholder_key_at_import FAILED [ 95%]\ntests/test_utils/config.py::TestGetSettingsAndGlobal::test_get_settings_cache_clear_functionality PASSED [100%]\n\n=================================== FAILURES ===================================\n____ TestSettings.test_settings_init_raises_error_on_missing_google_api_key ____\ntests/test_utils/config.py:129: in test_settings_init_raises_error_on_missing_google_api_key\n    assert \"GOOGLE_API_KEY must be set in .env file\" in str(excinfo.value)\nE   AssertionError: assert 'GOOGLE_API_KEY must be set in .env file' in '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing'\nE    +  where '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing' = str(1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing)\nE    +    where 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing = <ExceptionInfo 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing tblen=6>.value\n_ TestSettings.test_settings_init_raises_error_on_empty_string_google_api_key_kwarg _\ntests/test_utils/config.py:161: in test_settings_init_raises_error_on_empty_string_google_api_key_kwarg\n    assert \"GOOGLE_API_KEY must be set in .env file\" in str(excinfo.value)\nE   AssertionError: assert 'GOOGLE_API_KEY must be set in .env file' in '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing'\nE    +  where '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing' = str(1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing)\nE    +    where 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing = <ExceptionInfo 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing tblen=6>.value\n_ TestSettings.test_settings_init_raises_validation_error_on_none_google_api_key_kwarg _\ntests/test_utils/config.py:195: in test_settings_init_raises_validation_error_on_none_google_api_key_kwarg\n    assert any(msg in str(excinfo.value) for msg in [\"value is not a valid string\", \"Input should be a valid string\"])\nE   assert False\nE    +  where False = any(<generator object TestSettings.test_settings_init_raises_validation_error_on_none_google_api_key_kwarg.<locals>.<genexpr> at 0x7fd54e9f0b80>)\n__________ TestSettings.test_settings_init_fails_on_invalid_port_type __________\ntests/test_utils/config.py:205: in test_settings_init_fails_on_invalid_port_type\n    from app.utils.config import Settings\napp/utils/config.py:30: in <module>\n    settings = get_settings()\napp/utils/config.py:28: in get_settings\n    return Settings()\napp/utils/config.py:21: in __init__\n    super().__init__(**kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic_settings/main.py:176: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nE   API_PORT\nE     Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='not_an_integer', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/int_parsing\n_________ TestSettings.test_settings_init_fails_on_invalid_debug_type __________\ntests/test_utils/config.py:220: in test_settings_init_fails_on_invalid_debug_type\n    from app.utils.config import Settings\napp/utils/config.py:30: in <module>\n    settings = get_settings()\napp/utils/config.py:28: in get_settings\n    return Settings()\napp/utils/config.py:21: in __init__\n    super().__init__(**kwargs)\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic_settings/main.py:176: in __init__\n    super().__init__(\nE   pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nE   DEBUG\nE     Input should be a valid boolean, unable to interpret input [type=bool_parsing, input_value='not_a_boolean', input_type=str]\nE       For further information visit https://errors.pydantic.dev/2.11/v/bool_parsing\n_ TestGetSettingsAndGlobal.test_global_settings_fails_on_missing_key_at_import _\ntests/test_utils/config.py:365: in test_global_settings_fails_on_missing_key_at_import\n    with pytest.raises(ValueError) as excinfo:\nE   Failed: DID NOT RAISE <class 'ValueError'>\n_ TestGetSettingsAndGlobal.test_global_settings_fails_on_placeholder_key_at_import _\ntests/test_utils/config.py:382: in test_global_settings_fails_on_placeholder_key_at_import\n    with pytest.raises(ValueError) as excinfo:\nE   Failed: DID NOT RAISE <class 'ValueError'>\n=============================== warnings summary ===============================\ntests/test_utils/config.py: 19 warnings\n  /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_utils/config.py::TestSettings::test_settings_init_raises_error_on_missing_google_api_key - AssertionError: assert 'GOOGLE_API_KEY must be set in .env file' in '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing'\n +  where '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing' = str(1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing)\n +    where 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing = <ExceptionInfo 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing tblen=6>.value\nFAILED tests/test_utils/config.py::TestSettings::test_settings_init_raises_error_on_empty_string_google_api_key_kwarg - AssertionError: assert 'GOOGLE_API_KEY must be set in .env file' in '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing'\n +  where '1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing' = str(1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing)\n +    where 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing = <ExceptionInfo 1 validation error for Settings\\nGOOGLE_API_KEY\\n  Field required [type=missing, input_value={}, input_type=dict]\\n    For further information visit https://errors.pydantic.dev/2.11/v/missing tblen=6>.value\nFAILED tests/test_utils/config.py::TestSettings::test_settings_init_raises_validation_error_on_none_google_api_key_kwarg - assert False\n +  where False = any(<generator object TestSettings.test_settings_init_raises_validation_error_on_none_google_api_key_kwarg.<locals>.<genexpr> at 0x7fd54e9f0b80>)\nFAILED tests/test_utils/config.py::TestSettings::test_settings_init_fails_on_invalid_port_type - pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nAPI_PORT\n  Input should be a valid integer, unable to parse string as an integer [type=int_parsing, input_value='not_an_integer', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/int_parsing\nFAILED tests/test_utils/config.py::TestSettings::test_settings_init_fails_on_invalid_debug_type - pydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nDEBUG\n  Input should be a valid boolean, unable to interpret input [type=bool_parsing, input_value='not_a_boolean', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/bool_parsing\nFAILED tests/test_utils/config.py::TestGetSettingsAndGlobal::test_global_settings_fails_on_missing_key_at_import - Failed: DID NOT RAISE <class 'ValueError'>\nFAILED tests/test_utils/config.py::TestGetSettingsAndGlobal::test_global_settings_fails_on_placeholder_key_at_import - Failed: DID NOT RAISE <class 'ValueError'>\n================== 7 failed, 14 passed, 19 warnings in 0.24s ===================\n",
        "stderr": "",
        "returncode": 1
      }
    }
  ],
  "success_count": 0,
  "error_count": 4
}