name: AI Test Generation Auto-Commit

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:

# Prevent infinite loops
concurrency:
  group: auto-commit-workflow
  cancel-in-progress: true

permissions:
  contents: write
  actions: write

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ github.token }}
        fetch-depth: 0
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      
    - name: Setup Git for Contributions
      run: |
        REPO_OWNER="${{ github.repository_owner }}"
        git config --global user.name "$REPO_OWNER"
        git config --global user.email "$REPO_OWNER@users.noreply.github.com"
        echo "Git configured for contributions: $REPO_OWNER"

    - name: Run Coverage Analysis
      run: |
        echo "[INFO] Starting Coverage Analysis..."
        python .github/scripts/coverage_analyzer.py || echo "[SKIP] Coverage analysis failed"
      continue-on-error: true

    - name: Run Test Generation 
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "[INFO] Starting Test Generation..."
        if [[ -z "$GEMINI_API_KEY" ]]; then
          echo "[SKIP] GEMINI_API_KEY not set"
          echo '{"error": "GEMINI_API_KEY not set"}' > test_generation_results.json
        else
          python .github/scripts/test_generator.py || echo "[SKIP] Test generation failed"
        fi
      continue-on-error: true

    - name: Run Auto-Contribution Bot
      run: |
        echo "[INFO] Starting Auto-Contribution Bot..."
        REPO_OWNER="${{ github.repository_owner }}"
        OWNER_EMAIL="$REPO_OWNER@users.noreply.github.com"
        python .github/scripts/contribution_bot.py "$OWNER_EMAIL" "$REPO_OWNER" || echo "[SKIP] Contribution bot failed"
      continue-on-error: true

    - name: Commit and Push Changes
      run: |
        echo "[INFO] Checking for changes to commit..."
        if [[ -n "$(git status --porcelain)" ]]; then
          echo "Changes detected, committing..."
          git add -A
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M UTC')
          COMMIT_MSG="🤖 Auto-update: AI test generation and coverage improvement - $TIMESTAMP"
          git commit -m "$COMMIT_MSG"
          git push origin ${{ github.ref_name }}
          echo "✅ Successfully committed and pushed changes"
        else
          echo "ℹ️ No changes to commit"
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: workflow-results
        path: |
          coverage_report.json
          test_generation_results.json
          bot_activity.json
          workflow_results.json
        retention-days: 7
      
    - name: Summary Report
      if: always()
      run: |
        echo "## 🤖 Auto-Commit Workflow Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Repository Owner**: ${{ github.repository_owner }}" >> $GITHUB_STEP_SUMMARY
        echo "**Workflow Run**: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "**Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🎯 **Goal**: Auto-generate tests and create meaningful commits for GitHub contributions" >> $GITHUB_STEP_SUMMARY 