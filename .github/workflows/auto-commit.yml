name: 🤖 Auto Commit - Test Coverage Improvement

on:
  schedule:
    # Run every 15 minutes
    - cron: '*/30 * * * *'
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even if no changes'
        required: false
        default: 'false'
        type: boolean

  # Run on push to main branch - WITH PROTECTION against infinite loop
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.github/workflows/auto-commit.yml'
      - 'orchestrator.log'
      - 'workflow_*.json'
      - 'workflow_*.txt'

jobs:
  auto-commit:
    runs-on: ubuntu-latest
    
    # IMPORTANT: Skip if last commit was from this workflow (prevent infinite loop)
    if: "!contains(github.event.head_commit.message, '🤖 Auto-commit:')"
    
    # Prevent multiple runs at the same time - improved safety
    concurrency:
      group: auto-commit-${{ github.ref }}
      cancel-in-progress: true  # Cancel previous run if new one starts
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Remove duplicate pytest-cov install since it's already in requirements.txt
      
      - name: 🔧 Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: 🔑 Setup Gemini API Key
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      
      - name: 🚀 Run Auto Commit Workflow
        run: |
          python .github/scripts/main_orchestrator.py
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      
      - name: 📊 Upload workflow results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: workflow-results-${{ github.run_id }}
          path: |
            workflow_results.json
            workflow_summary.txt
            orchestrator.log
            coverage_report.json
            test_generation_results.json
            auto_commit_result.json
          retention-days: 7
      
      - name: 📝 Create summary comment
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let summary = '## 🤖 Auto Commit Workflow Summary\n\n';
            
            try {
              if (fs.existsSync('workflow_summary.txt')) {
                const summaryContent = fs.readFileSync('workflow_summary.txt', 'utf8');
                summary += '```\n' + summaryContent + '\n```\n\n';
              }
              
              if (fs.existsSync('workflow_results.json')) {
                const results = JSON.parse(fs.readFileSync('workflow_results.json', 'utf8'));
                
                summary += '### 📈 Results\n\n';
                summary += `- **Overall Success**: ${results.overall_success ? '✅' : '❌'}\n`;
                summary += `- **Steps Completed**: ${results.steps.filter(s => s.success).length}/${results.steps.length}\n`;
                summary += `- **Timestamp**: ${results.timestamp}\n\n`;
                
                if (results.errors && results.errors.length > 0) {
                  summary += '### ❌ Errors\n\n';
                  results.errors.forEach(error => {
                    summary += `- ${error}\n`;
                  });
                  summary += '\n';
                }
              }
              
              summary += '---\n*This comment was automatically generated by the Auto Commit workflow.*';
              
            } catch (error) {
              summary += `❌ Error reading workflow results: ${error.message}`;
            }
            
            // Only create comment if this is a PR or issue context
            if (context.issue && context.issue.number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: summary
              });
            } else {
              console.log('Summary:', summary);
            }
      
      - name: 🚨 Handle workflow failure
        if: failure()
        run: |
          echo "❌ Auto commit workflow failed"
          echo "Check the logs and artifacts for more details"
          
          # Save failure info
          echo "Workflow failed at $(date)" > failure_info.txt
          echo "Run ID: ${{ github.run_id }}" >> failure_info.txt
          echo "Commit: ${{ github.sha }}" >> failure_info.txt 